#+OPTIONS: num:nil
#+TITLE: csQCA
#+LANG: en
#+PROPERTY: header-args R :results output drawer :eval never-export :session QCA :exports both
* HTML headers :noexport:ignore:
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>

#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>


* Loadings packages

#+begin_src R :results none
library(QCA)
library(tidyverse)
library(knitr) # Beatiful tables
library(stargazer)
#+end_src

* Loading uncalibrated dataset

#+begin_src R :results output pp table
data(LR)

summary(LR) %>% kable() %>% print()
#+end_src

#+RESULTS:
#+begin_example


|   |     DEV       |     URB      |     LIT      |     IND      |     STB       |     SURV    |
|:--|:--------------|:-------------|:-------------|:-------------|:--------------|:------------|
|   |Min.   : 320.0 |Min.   :15.30 |Min.   :38.00 |Min.   :11.20 |Min.   : 2.000 |Min.   :-9.0 |
|   |1st Qu.: 398.5 |1st Qu.:25.88 |1st Qu.:73.30 |1st Qu.:21.70 |1st Qu.: 5.250 |1st Qu.:-8.0 |
|   |Median : 588.0 |Median :33.70 |Median :95.00 |Median :28.85 |Median : 8.000 |Median :-2.5 |
|   |Mean   : 641.3 |Mean   :39.94 |Mean   :84.44 |Mean   :28.79 |Mean   : 8.833 |Mean   : 0.0 |
|   |3rd Qu.: 871.5 |3rd Qu.:53.12 |3rd Qu.:98.00 |3rd Qu.:36.75 |3rd Qu.:10.750 |3rd Qu.: 9.5 |
|   |Max.   :1098.0 |Max.   :78.80 |Max.   :99.90 |Max.   :49.90 |Max.   :21.000 |Max.   :10.0 |
#+end_example

* Calibrating according to textbook

#+begin_src R
LR$DEV <- calibrate(LR$DEV, type = "crisp", thresholds = 600)
LR$URB <- calibrate(LR$URB, type = "crisp", thresholds = 50)
LR$LIT  <- calibrate(LR$LIT, type = "crisp", thresholds = 70)
LR$IND  <- calibrate(LR$IND, type = "crisp", thresholds = 30)
LR$STB  <- 1 - calibrate(LR$STB, type = "crisp", thresholds = 10)
LR$SURV  <- calibrate(LR$SURV, type = "crisp", thresholds = 0)

LR %>% kable()
#+end_src

#+RESULTS:
:results:


|   | DEV| URB| LIT| IND| STB| SURV|
|:--|---:|---:|---:|---:|---:|----:|
|AU |   1|   0|   1|   1|   0|    0|
|BE |   1|   1|   1|   1|   1|    1|
|CZ |   0|   1|   1|   1|   1|    1|
|EE |   0|   0|   1|   0|   1|    0|
|FI |   0|   0|   1|   0|   1|    1|
|FR |   1|   0|   1|   1|   1|    1|
|DE |   1|   1|   1|   1|   0|    0|
|GR |   0|   0|   0|   0|   0|    0|
|HU |   0|   0|   1|   0|   0|    0|
|IE |   1|   0|   1|   0|   1|    1|
|IT |   0|   0|   1|   0|   1|    0|
|NL |   1|   1|   1|   1|   1|    1|
|PL |   0|   0|   1|   0|   0|    0|
|PT |   0|   0|   0|   0|   0|    0|
|RO |   0|   0|   0|   0|   1|    0|
|ES |   0|   0|   0|   0|   0|    0|
|SE |   1|   0|   1|   1|   1|    1|
|UK |   1|   1|   1|   1|   1|    1|
:end:

* Truth Table

#+begin_src R results output raw
TT <- truthTable(
  LR,
  outcome = "SURV",
  conditions = "DEV, URB, LIT, IND",
  complete = TRUE,
  use.letters = FALSE,
  show.cases = TRUE,
  sort.by = "out",
  ## dcc = TRUE # Deviant cases
)

print(TT)
#+end_src

#+RESULTS:
:results:

  OUT: output value
    n: number of cases in configuration
 incl: sufficiency inclusion score
  PRI: proportional reduction in inconsistency

     DEV URB LIT IND   OUT    n  incl  PRI   cases
 8    0   1   1   1     1     1  1.000 1.000 CZ
11    1   0   1   0     1     1  1.000 1.000 IE
 1    0   0   0   0     0     4  0.000 0.000 GR,PT,RO,ES
 3    0   0   1   0     0     5  0.200 0.200 EE,FI,HU,IT,PL
12    1   0   1   1     0     3  0.667 0.667 AU,FR,SE
16    1   1   1   1     0     4  0.750 0.750 BE,DE,NL,UK
 2    0   0   0   1     ?     0    -     -
 4    0   0   1   1     ?     0    -     -
 5    0   1   0   0     ?     0    -     -
 6    0   1   0   1     ?     0    -     -
 7    0   1   1   0     ?     0    -     -
 9    1   0   0   0     ?     0    -     -
10    1   0   0   1     ?     0    -     -
13    1   1   0   0     ?     0    -     -
14    1   1   0   1     ?     0    -     -
15    1   1   1   0     ?     0    -     -
:end:

** Finding incoherent configurations

#+begin_src R
C <- findRows(obj = TT, type = c(2, 3))

LR[C,] %>% kable()
#+end_src

#+RESULTS:
:results:


|   | DEV| URB| LIT| IND| STB| SURV|
|:--|---:|---:|---:|---:|---:|----:|
|BE |   1|   1|   1|   1|   1|    1|
|FI |   0|   0|   1|   0|   1|    1|
|FR |   1|   0|   1|   1|   1|    1|
|HU |   0|   0|   1|   0|   0|    0|
|PL |   0|   0|   1|   0|   0|    0|
:end:

* Minimization

** Outcome [1]

#+begin_src R
MIN <- minimize(TT, include = "?, C", details = TRUE)
MIN
#+end_src

#+RESULTS:
:results:

M1: DEV*~IND + (~DEV*URB) -
SURV
M2: DEV*~IND + (~DEV*IND) -
SURV

                                  -------------------
             inclS   PRI   covS   covU   (M1)   (M2)   cases
---------------------------------------------------------
1  DEV*~IND  1.000  1.000  0.125  0.125  0.125  0.125  IE
---------------------------------------------------------
2  ~DEV*URB  1.000  1.000  0.125  0.000  0.125         CZ
3  ~DEV*IND  1.000  1.000  0.125  0.000         0.125  CZ
---------------------------------------------------------
         M1  1.000  1.000  0.250
         M2  1.000  1.000  0.250
:end:

** Outcome [0]
