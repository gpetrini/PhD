* Simulation TODOs and setups                                      :noexport:

bibliography:refs.bib

** General config

#+PROPERTY: header-args:python :session SFC  :exports none :results output :eval yes :cache no :async t :tangle ./codes/SFC_setup.py :python /usr/bin/python3.8 :eval never-export

#+BEGIN_SRC python 
from pysolve3.model import Model
from pysolve3.utils import SolveSFC, ShockModel, SummaryShock, SFCTable

from datetime import datetime
t1 = datetime.now()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patheffects as pe
import seaborn as sns
import networkx as nx
import sympy as sp
from sympy import pprint, cse

def model(
    alpha = 1.0, # Fazzarri Calibration. Talk to lucas
    gamma_F = 0.08,
    gamma_u = 0.09, # Fazzarri Calibration
    g_Z = 0.025, # Fazzarri Calibration
    omega = 0.5*0.5, # Fazzaru alpha*omwga
    rm = 0.01,
    spread_l = 0,
    spread_mo = 0,
    un = 0.8,
    v = 1.2, # Fazzarri Calibration
    phi_0 = 0.025, # Fazzarri Calibration
    phi_1 = 0.1,
    infla = 0.0,
    phparam=1.0,
    R = 0.7,  # Previous 0.7 Increased
    gC = 0.0, #0.025 (Real Data)
    real = 0.0
):
  """
  phparam: 1.0 means no inflation
  """
  model = Model()
  model.set_var_default(0) 
  model.var('C', desc='Consumption')
  model.var('Cw', desc='Workers Consumption', default=112)
  model.var('Ck', desc='Capitalist Consumption', default=68)
  model.var('DT', desc='Capitalists total debt')
  model.var('DN', desc='Capitalist net debt')
  model.var('FD', desc='Distributed profits')
  model.var('Fn', desc='Net profits')
  model.var('FT', desc='Total Profits')
  model.var('FU', desc='Retained profits')
  model.var('gk', desc='Capital growth rate')
  model.var('g_Z', desc='Autonomous grouth rate')
  model.var('h', desc='Marginal propensity to invest (non-residential)', default=0.03) # previous 0.03
  model.var('I_t', desc='Investment', default = 100)
  model.var('I_f', desc='Non-residential investment')
  model.var('I_h', desc='Residential investment', default = 100)
  model.var('Is', desc='Residential investment (Supply)', default = 100)
  model.var('K_HS', desc='Houses supply', default=500)
  model.var('K_HD', desc='Houses demand', default=500)
  model.var('K_f', desc='Non-residential capital', default = 1000)
  model.var('Knom', desc='Nominal Capital', default=1500)
  model.var('K', desc='Real Capital', default=1500)
  model.var('K_k', desc="% of Kf in total")
  model.var('K_kr', desc="nominal % of Kf in total")
  model.var('L', desc='Total Loans')
  model.var('Lf', desc='Firms Loans')
  model.var('Lk', desc='Capitalist Loans')
  model.var('M', desc='Money deposits')
  model.var('M_h', desc='Households deposits')
  model.var('MO', desc='Mortgages')
  model.var('NFW_h', desc='Households Capitalist Net Financial Wealth')
  model.var('NFW_hw', desc='Workers Net Financial Wealth', default=0)
  model.var('NFW_f', desc='Firms Net Financial Wealth')
  model.var('NFW_b', desc='Banks Net Financial Wealth')
  model.var('own', desc='Own interest rate')
  model.var('ph', desc='House price', default = 1)
  model.var('rl', desc='Interests rates on loans')
  model.var('rmo', desc='Interests rates on mortgages')
  model.var('S_hw', desc='Workers savings')
  model.var('S_hk', desc='Capitalist savings')
  model.var('u', desc='Capacity utilization ratio', default=0.7)
  model.var('V_h', desc='Household net nominal wealth')
  model.var('V_hr', desc='Household net real wealth')
  model.var('V_f', desc='Firms net wealth')
  model.var('V_b', desc='Banks net wealth')
  model.var('W', desc='Wages')
  model.var('Y', desc='GDP', default=280)
  model.var('Yk', desc='Capacity', default=1100)
  model.var('YDw', desc='Workers disposable income')
  model.var('YDk', desc='Capitalists disposable income')
  model.var('Z', desc='Autonomous expenditures')
  
  model.param('alpha', desc='Propensity to consume out of wages', default=alpha)
  model.param('gamma_F', desc='% of undistributed profits', default=gamma_F)
  model.param('gamma_u', desc='Adjustment parameter for the marginal propensity to invest', default=gamma_u)
  model.param('omega', desc='Wage-share', default = omega)
  model.param('rm', desc='Interest rates on money deposits', default=rm)
  model.param('spread_l', desc='Spread for loans', default=spread_l)
  model.param('spread_mo', desc='Spread for mortgages', default=spread_mo)
  model.param('un', desc='Normal capacity utilization ratio', default=un)
  model.param('v', desc='Capitl-Output ratio', default=v)
  model.param('phi_0', desc='Autonomous housing investment component',default = phi_0)
  model.param('phi_1', desc='Housing investment sensitivity to own interest rate', default = phi_1)
  model.param('R', desc='Autonomous ratio', default=R)
  model.param('infla', desc='infla value', default = infla)
  model.param('gC', desc='Autonomous consumption growth rate', default = gC)
  model.param('real_data', desc='Real data flag. 1 if using observed data, 0 otherwise', default = real)
  
  # General equations
  model.add('C = Cw + Ck')
  model.add('I_t = I_f + I_h') # Eq2
  model.add('Yk = K_f(-1)/v') # Eq 4
  model.add('u = Y/Yk') # Eq 5
  model.add('W = omega*Y') # Eq 6
  model.add('gk = h*u/v') # Eq 7
  model.add('Knom = K_HD*ph + K_f') # Eq 8 
  model.add('K = K_HD + K_f') # Eq 8 
  model.add('Z = I_h + Ck') # Eq 9
  model.add('Y = C + I_t') # Eq1
  
  # Workers equations
  model.add('Cw = alpha*W') # Eq 14
  model.add('YDw = W') # Eq 10
  model.add('S_hw = YDw - Cw') # Eq 11
  model.add('NFW_hw = S_hw')
    
  # Capitalist equations
  model.add('YDk = FD + rm*M_h(-1) - rmo*MO(-1) - rl*Lk(-1)')
  
  model.add('Ck = R*Z + real_data*Ck(-1)*(1+gC)') # In real data, gC >0, real_data ==1 and R == 0
  model.add('S_hk = YDk - Ck') # Eq 11
  model.add('d(MO) = I_h') # Eq 12
  model.add('d(Lk) = Ck')
  model.add('d(M_h) = S_hk + d(Lk)')
  model.add('V_h =  M_h  + K_HD*ph - MO - Lk') # Eq 15 
  model.add('V_hr =  M_h  + K_HD - MO - Lk') # Eq 15 
  model.add('NFW_h = S_hk - I_h') # Eq 16
  
  # Firms
  model.add('d(Lf) = I_f - FU') # Eq 15
  model.add('FT = (1-omega)*Y') # Eq 16
  model.add('Fn = FT -rl*Lf(-1)')
  model.add('FU = gamma_F*(Fn)') # Eq 17
  model.add('FD = (1 - gamma_F)*(Fn)') # Eq 18
  #model.add('I_f = h*Y') # Eq 19
  model.add('I_f = h(-1)*Y') # Eq 19, Warning: h -> h(-1).
  model.add('d(K_f) = I_f') # 20
  model.add('h = h(-1)*gamma_u*(u-un) + h(-1)') # Eq 21 # Version without corridor
  model.add('V_f = K_f - Lf') # Eq 22
  model.add('NFW_f = FU - I_f') # Eq 23
  
  # Banks
  model.add('rmo = (1+spread_mo)*rm') # Eq 25
  model.add('rl = (1+spread_l)*rm') # Eq 26
  model.add('NFW_b = rl*L(-1) + rmo*MO(-1) - rm*M(-1)') # Eq 28
  model.add('V_b = L + MO - M') # Eq 27
  model.add('d(L) = d(Lf) + d(Lk)')
  model.add('d(M) = d(M_h)')
  
  
  # Residential investment
  model.add('K_HS = K_HD') # Eq 29
  model.add('Is = I_h')
  model.add('d(K_HD) = I_h') # Eq 30
  model.add('I_h = (1+g_Z)*I_h(-1)') # Eq 31
  model.add('K_k = K_HD/K') 
  model.add('K_kr = K_k*ph') 
  model.add('ph =(1+infla)*ph(-1)')
  model.add('own = ((1+rmo)/(1+infla)) -1')  
  model.add('g_Z = phi_0 - phi_1*own')

  # Stock flow ration (in progress)

  # Aux variables

  model.add('DT = MO + Lk')
  model.add('DN = DT - M')
  
  return model

def clock_plots(shock, filename, variable):
    shock["TIME"] = [i+1 for i in range(len(shock.index))]
    shock["Ih/Y"] = shock["I_h"]/shock["Y"]
    shock["I/Y"] = shock["I_t"]/shock["Y"]
    shock["Z/Y"] = shock["Z"]/shock["Y"]
    shock["gY"] = shock["Y"].pct_change()
    
    sns.set_context('talk')
    fig, ax = plt.subplots(1,3,figsize=(24,5)
                          )
    
    sns.scatterplot(y = 'Ih/Y', x='u', data=shock, size="TIME", sizes = (1,200), 
                    color = 'black', legend=False, ax=ax[0])
    sns.lineplot(y = 'Ih/Y', x='u', data=shock, sort=False, color = 'black', ax=ax[0])
    ax[0].set_title("(A) Residential investment share on GDP\n VS. Capacity utilization ratio")
    
    sns.scatterplot(y = 'Z/Y', x='u', data=shock, size="TIME", sizes = (1,200), color = 'black', legend=False, ax=ax[1])
    sns.lineplot(y = 'Z/Y', x='u', data=shock, sort=False, color = 'black', ax=ax[1])
    ax[1].set_title("(B) Autonomous Expenditure share\n VS Capacity utilization")
    
    sns.scatterplot(y = 'I/Y', x='gY', data=shock, size="TIME", sizes = (1,200), color = 'black', legend=False, ax=ax[2])
    sns.lineplot(y = 'I/Y', x='gY', data=shock, sort=False, color = 'black', ax=ax[2])
    ax[2].set_title("(C) Total investment share\n VS GDP growth rate")
    
    
    sns.despine()
    
    fig.savefig("./figs/" + filename, dpi = 600)
    plt.clf()
    plt.close('all')

def plot_shock(filename, shock, df):
    """
    This function plots some selected variables
    
    filename: name to save the plot (str)
    shock: df returned by ShockModel function
    """
    sns.set_context('talk')
    fig, ax = plt.subplots(2,2, figsize=(16,10))

    shock[["Y"]].pct_change().plot(
        title = "Growth rates", ax = ax[0,0], 
        ls = ('--'), lw=3,
    )
    shock[["K"]].pct_change().plot(
        title = "Growth rates", ax = ax[0,0], 
        ls = (':'), lw=3
    )
    shock[["I_h"]].pct_change().plot(
        title = "Growth rates", ax = ax[0,0], 
        ls = ('-'), lw=3,
    )
    shock[["I_f"]].pct_change().plot(
        title = "Growth rates", ax = ax[0,0], 
        ls = ('-.'), lw=3,
    )
    ax[0,0].axhline(y=shock["g_Z"].iloc[-1], color = "black", ls = "--", lw=2.5)
    #ax[0,0].set_yticklabels(['{:,.1%}'.format(x) for x in ax[0,0].get_yticks()])
    ax[0,0].legend(loc='upper center', bbox_to_anchor=(0.5, -0.06),
                   labels = ["$Y$", "$K$", "$I_h$", "$I_f$"],
              fancybox=True, shadow=True, ncol=2)
    ax[0,0].ticklabel_format(useOffset=False)

    ((shock["Z"]/shock['Y'])).plot(
        title = "Autonomous expenditures share on GDP", ax = ax[0,1], ls = ('-'), lw=3, color='darkred')
    
    ax[0,1].set_ylim(auto=True)
    ax[0,1].legend(loc='upper center', bbox_to_anchor=(0.5, -0.08),
                   labels=['$Z/Y$'],
              fancybox=True, shadow=True, ncol=2)

    shock['u'].plot(title = 'Capacity utilization ratio', ax=ax[1,0], legend = False, color = "darkred", lw = 3, )
    ax[1,0].axhline(y = shock['un'].iloc[-1], ls ='--', color = "gray")
    #ax[1,0].set_yticklabels(['{:,.2%}'.format(x) for x in ax[1,0].get_yticks()])
    ax[1,0].ticklabel_format(useOffset=False)

    shock['h'].plot(title = 'Marginal propensity to invest', ax=ax[1,1], legend = False, color = "darkred", lw = 3, )
    ax[1,1].axhline(y = df['h'].iloc[-1], ls ='--', color = "gray")
    ax[1,1].ticklabel_format(useOffset=False)
    
    sns.despine()
    plt.tight_layout(rect=[0, 0.03, 1, 0.95])


    fig.savefig("./figs/" + filename, dpi = 600)
    plt.clf()
    plt.close('all')

def plot_norms(filename, shock, df):
    """
    This function plots some selected variables
    
    filename: name to save the plot (str)
    shock: df returned by ShockModel function
    """
    sns.set_context('talk')
    fig, ax = plt.subplots(2,2, figsize=(16,10))

    ((shock['YDk']/(shock["MO"] + shock["Lk"] - shock["M"]))).plot(title = "Capitalists households\nFlow-Stock ratios", ax = ax[0,0], ls = ('-'), lw=3)
    ((shock["YDk"]/shock['V_hr'])).plot(ax = ax[0,0], ls = ('-'), lw=3)
    ((shock["YDk"]/shock['V_h'])).plot(ax = ax[0,0], ls = ('-'), lw=3)
    
    ax[0,0].set_yticklabels(['{:,.1%}'.format(x) for x in ax[0,0].get_yticks()])
    ax[0,0].legend(loc='upper center', bbox_to_anchor=(0.5, -0.08),
                   labels = [
                       "$YD_{k}/ND$",
                       "$YD_{k}/V_{hr}$",
                       "$YD_{k}/V_{h}$",
                            ],
              fancybox=True, shadow=True, ncol=2)
    #ax[0,0].ticklabel_format(useOffset=False)
    
    shock['K_k'].plot(color = "darkred", 
                      title = "Housing share on\nTotal Capital Stock", 
                      label = "$\k$", legend = False, ax = ax[0,1], lw = 3, )
    ax[0,1].axhline(y = df['K_k'].iloc[-1], ls ='--', color = "gray")
    ax[0,1].ticklabel_format(useOffset=False)
    
    (shock["MO"]*shock["rmo"][1:]/shock['YDk'][1:]).plot(
        title="Debt service on\nDisposable income", ax = ax[1,0], ls = ('-'), lw=3)
    ((shock["Lk"]*shock["rl"][1:])/shock['YDk'][1:]).plot(ax = ax[1,0], ls = ('-'), lw=3)
    ((shock["MO"]*shock["rmo"][1:] + shock["Lk"]*shock["rl"][1:])/shock['YDk'][1:]).plot( ax = ax[1,0], ls = ('-'), lw=3)
    ax[1,0].set_yticklabels(['{:,.1%}'.format(x) for x in ax[1,0].get_yticks()])
    ax[1,0].legend(loc='upper center', bbox_to_anchor=(0.5, -0.1),
                   labels = [
                       'Mortgage',
                       'Loans',
                       'Total'
                            ],
              fancybox=True, shadow=True, ncol=2)
    
    (shock['FT']/shock['K_f']).plot(ax=ax[1,1], label='Gross profit rate')
    (shock['Fn']/shock['K_f']).plot(ax=ax[1,1], label='Net profit rate')
    ax[1,1].set_yticklabels(['{:,.1%}'.format(x) for x in ax[1,0].get_yticks()])
    ax[1,1].legend()

    
    sns.despine()
    plt.tight_layout(rect=[0, 0.03, 1, 0.95])
    
    fig.savefig("./figs/" + filename, dpi = 300)
    plt.clf()

    plt.close('all')

def other_plots(shock, df):
  
    fig, ax = plt.subplots()  
    (shock['MO']/(shock['M'])).plot(title="Mortgage as % of deposits", ax=ax)
    sns.despine()
    #plt.show()
    plt.clf()

    fig, ax = plt.subplots()  
    ((shock['MO'] + shock['Lk'])/(shock['K'])).plot(title="Capitalistas debt as % of total capital stock", ax=ax)
    sns.despine()
    #plt.show()
    plt.clf()

    
    fig, ax = plt.subplots()
    (shock['FT']/shock['K_f']).plot(ax=ax, label='Gross profit rate')
    (shock['Fn']/shock['K_f']).plot(ax=ax, label='Net profit rate')
    ax.legend()
    sns.despine()
    plt.clf()

    
    fig, ax = plt.subplots()
    (shock['YDk']/shock['K_HD']).plot(ax=ax, label='Real', title="Disposible income as % of Housing")
    (shock['YDk']/(shock['K_HD']*shock['ph'])).plot(ax=ax, label='Nominal')
    ax.legend()
    sns.despine()
    #plt.show()
    plt.clf()
    
    fig, ax = plt.subplots()
    (shock['NFW_h']/(shock['Lk'] + shock['MO']) - (shock['rm'] - shock['g_Z'])).plot(title = 'Household debt stability',ax=ax)
    ax.axhline(y = ((df['NFW_h']/(df['Lk'] + df['MO'])) - (df['rm'] - df['g_Z'])).iloc[-1], ls ='--', color = "gray")
    
    sns.despine()
    plt.tight_layout(rect=[0, 0.03, 1, 0.95])
    #plt.show()
    plt.clf()
    
    fig, ax = plt.subplots(1,1, figsize=(8,5))

    shock[["MO", "L"]].apply(lambda x: x/(shock["MO"] + shock['L'])).plot(kind = "area",stacked = True ,title = "Credit (as % Passives)", ax=ax)
    ax.legend(loc='center left', bbox_to_anchor=(1, 0.5))
    ax.axhline(y = 1, color = "black", ls = "--")
    ax.axhline(y = 0, color = "black", ls = "--")
    
    sns.despine()
    plt.tight_layout(rect=[0, 0.03, 1, 0.95])
    plt.clf()

    plt.close('all')

  
#+END_SRC

#+RESULTS:
: Python 3.8.5 (default, Jul 28 2020, 12:59:40) 
: [GCC 9.3.0] on linux
: Type "help", "copyright", "credits" or "license" for more information.
: python.el: native completion setup loaded


** Increase in autonomous growth rate ($g_Z$)

#+BEGIN_SRC python :results raw drawer table
base = model()
df = SolveSFC(base, time=1000)
shock = ShockModel(base_model=base, create_function=model(), variable='phi_0', increase=0.005, time = 1000)
clock_plots(shock = shock, filename = 'Clock_1.png', variable='g_Z')
plot_shock(shock = shock, filename = 'Shock_1.png', df=df)
plot_norms(shock = shock, filename = 'Shock_1Norms.png', df=df)
other_plots(shock, df=df)

shock1 = shock.round(decimals = 5).tail(1).transpose().loc['alpha':,:]
shock1.columns = ['$\Delta \phi_0$']
print(shock1.to_latex())
#+END_SRC

#+RESULTS:
:results:
(python3.8:9033): Gtk-[1;33mWARNING[0m **: [34m10:18:48.301[0m: Theme parsing error: gtk.css:1:117: Failed to import: Erro ao abrir arquivo /home/gpetrini/.local/share/gnome-shell/extensions/unite@hardpixel.eu/styles/buttons-right-always.css: Arquivo ou diretório não encontrado
\begin{tabular}{lr}
\toprule
{} &  \$\textbackslash Delta \textbackslash phi\_0\$ \\
\midrule
alpha     &     1.000000e+00 \\
gamma\_F   &     8.000000e-02 \\
gamma\_u   &     9.000000e-02 \\
omega     &     2.500000e-01 \\
rm        &     1.000000e-02 \\
spread\_l  &     0.000000e+00 \\
spread\_mo &     0.000000e+00 \\
un        &     8.000000e-01 \\
v         &     1.200000e+00 \\
phi\_0     &     3.000000e-02 \\
phi\_1     &     1.000000e-01 \\
R         &     7.000000e-01 \\
infla     &     0.000000e+00 \\
gC        &     0.000000e+00 \\
real\_data &     0.000000e+00 \\
\_K\_f\_\_1   &     1.202782e+26 \\
\_M\_h\_\_1   &     1.906567e+27 \\
\_MO\_\_1    &     5.860454e+26 \\
\_Lk\_\_1    &     1.367439e+27 \\
\_Ck\_\_1    &     3.853813e+25 \\
\_Lf\_\_1    &    -4.691706e+25 \\
\_h\_\_1     &     4.350000e-02 \\
\_L\_\_1     &     1.320522e+27 \\
\_M\_\_1     &     1.906567e+27 \\
\_K\_HD\_\_1  &     5.860454e+26 \\
\_I\_h\_\_1   &     1.651634e+25 \\
\_ph\_\_1    &     1.000000e+00 \\
TIME      &     1.051000e+03 \\
Ih/Y      &     2.119500e-01 \\
I/Y       &     2.554500e-01 \\
Z/Y       &     7.065000e-01 \\
gY        &     2.900000e-02 \\
\bottomrule
\end{tabular}
:end:


** Wage-share decrease ($\Downarrow \omega$)
   
#+BEGIN_SRC python :results raw drawer table latex
base = model()
df = SolveSFC(base, time=1000)
shock = ShockModel(base_model=base, create_function=model(), variable='omega', increase=-0.01, time = 1000)
df1=shock
clock_plots(shock = shock, filename = 'Clock_2.png', variable='omega')
plot_shock(shock = shock, filename = 'Shock_2.png', df=df)
plot_norms(shock = shock, filename = 'Shock_2Norms.png', df=df)
other_plots(shock, df)
shock2 = shock.round(decimals = 3).tail(1).transpose().loc['alpha':,:]
shock2.columns = ['$\Delta \omega$']
print(shock2.to_latex())
#+END_SRC

#+RESULTS:
:results:
\begin{tabular}{lr}
\toprule
{} &  \$\textbackslash Delta \textbackslash omega\$ \\
\midrule
alpha     &     1.000000e+00 \\
gamma\_F   &     8.000000e-02 \\
gamma\_u   &     9.000000e-02 \\
omega     &     2.400000e-01 \\
rm        &     1.000000e-02 \\
spread\_l  &     0.000000e+00 \\
spread\_mo &     0.000000e+00 \\
un        &     8.000000e-01 \\
v         &     1.200000e+00 \\
phi\_0     &     2.500000e-02 \\
phi\_1     &     1.000000e-01 \\
R         &     7.000000e-01 \\
infla     &     0.000000e+00 \\
gC        &     0.000000e+00 \\
real\_data &     0.000000e+00 \\
\_K\_f\_\_1   &     8.997916e+23 \\
\_M\_h\_\_1   &     1.745460e+25 \\
\_MO\_\_1    &     5.428750e+24 \\
\_Lk\_\_1    &     1.266708e+25 \\
\_Ck\_\_1    &     2.968848e+23 \\
\_Lf\_\_1    &    -6.412329e+23 \\
\_h\_\_1     &     3.600000e-02 \\
\_L\_\_1     &     1.202585e+25 \\
\_M\_\_1     &     1.745460e+25 \\
\_K\_HD\_\_1  &     5.428750e+24 \\
\_I\_h\_\_1   &     1.272363e+23 \\
\_ph\_\_1    &     1.000000e+00 \\
TIME      &     1.051000e+03 \\
Ih/Y      &     2.170000e-01 \\
I/Y       &     2.530000e-01 \\
Z/Y       &     7.240000e-01 \\
gY        &     2.400000e-02 \\
\bottomrule
\end{tabular}
:end:

** Increase in mortgage interest rate
   
#+BEGIN_SRC python :results raw table drawer latex
base = model()
df = SolveSFC(base, time=1000)
shock = ShockModel(base_model=base, create_function=model(), variable='rm', increase=0.0025, time = 1000)
df3=shock
shock3 = shock.round(decimals = 3).tail(1).transpose().loc['alpha':,:]
shock3.columns = ['$\Delta rm$']
clock_plots(shock = shock, filename = 'Clock_3.png', variable='rmo')
plot_shock(shock = shock, filename = 'Shock_3.png', df=df)
plot_norms(shock = shock, filename = 'Shock_3Norms.png', df=df)
other_plots(shock, df=df)
print(shock3.to_latex())
#+END_SRC

#+RESULTS:
#+begin_export latex
\begin{tabular}{lr}
\toprule
{} &   \$\textbackslash Delta rm\$ \\
\midrule
alpha     &  1.000000e+00 \\
gamma\_F   &  8.000000e-02 \\
gamma\_u   &  9.000000e-02 \\
omega     &  2.500000e-01 \\
rm        &  1.200000e-02 \\
spread\_l  &  0.000000e+00 \\
spread\_mo &  0.000000e+00 \\
un        &  8.000000e-01 \\
v         &  1.200000e+00 \\
phi\_0     &  2.500000e-02 \\
phi\_1     &  1.000000e-01 \\
R         &  7.000000e-01 \\
infla     &  0.000000e+00 \\
gC        &  0.000000e+00 \\
real\_data &  0.000000e+00 \\
\_K\_f\_\_1   &  7.143535e+23 \\
\_M\_h\_\_1   &  1.381441e+25 \\
\_MO\_\_1    &  4.297398e+24 \\
\_Lk\_\_1    &  1.002726e+25 \\
\_Ck\_\_1    &  2.326227e+23 \\
\_Lf\_\_1    & -5.102520e+23 \\
\_h\_\_1     &  3.600000e-02 \\
\_L\_\_1     &  9.517011e+24 \\
\_M\_\_1     &  1.381441e+25 \\
\_K\_HD\_\_1  &  4.297398e+24 \\
\_I\_h\_\_1   &  9.969545e+22 \\
\_ph\_\_1    &  1.000000e+00 \\
\bottomrule
\end{tabular}
#+end_export

** TODO Decrease in mortgage interest rate

#+BEGIN_SRC python :results raw drawer table latex
base = model()
df = SolveSFC(base, time=1000)
shock = ShockModel(base_model=base, create_function=model(), variable='rm', increase=-0.005, time = 1000)
df3b=shock
shock3b = shock.round(decimals = 3).tail(1).transpose().loc['alpha':,:]
shock3b.columns = ['$\Downarrow rm$']
clock_plots(shock = shock, filename = 'Clock_3b.png', variable='rmo')
plot_shock(shock = shock, filename = 'Shock_3b.png', df=df)
plot_norms(shock = shock, filename = 'Shock_3Normsb.png', df=df)
other_plots(shock, df=df)
print(shock3b.to_latex())
#+END_SRC

#+RESULTS:
#+begin_export latex
\begin{tabular}{lr}
\toprule
{} &  \$\textbackslash Downarrow rm\$ \\
\midrule
alpha     &     1.000000e+00 \\
gamma\_F   &     8.000000e-02 \\
gamma\_u   &     9.000000e-02 \\
omega     &     2.500000e-01 \\
rm        &     5.000000e-03 \\
spread\_l  &     0.000000e+00 \\
spread\_mo &     0.000000e+00 \\
un        &     8.000000e-01 \\
v         &     1.200000e+00 \\
phi\_0     &     2.500000e-02 \\
phi\_1     &     1.000000e-01 \\
R         &     7.000000e-01 \\
infla     &     0.000000e+00 \\
gC        &     0.000000e+00 \\
real\_data &     0.000000e+00 \\
\_K\_f\_\_1   &     1.488145e+24 \\
\_M\_h\_\_1   &     2.792507e+25 \\
\_MO\_\_1    &     8.664652e+24 \\
\_Lk\_\_1    &     2.021752e+25 \\
\_Ck\_\_1    &     4.834839e+23 \\
\_Lf\_\_1    &    -9.571063e+23 \\
\_h\_\_1     &     3.700000e-02 \\
\_L\_\_1     &     1.926042e+25 \\
\_M\_\_1     &     2.792507e+25 \\
\_K\_HD\_\_1  &     8.664652e+24 \\
\_I\_h\_\_1   &     2.072074e+23 \\
\_ph\_\_1    &     1.000000e+00 \\
\bottomrule
\end{tabular}
#+end_export

** Increase in house inflation
   
#+BEGIN_SRC python :results raw drawer table latex
base = model()
df = SolveSFC(base, time=1000)
shock = ShockModel(base_model=base, create_function=model(), variable='infla', increase=0.05, time = 1000)
df2=shock
clock_plots(shock = shock, filename = 'Clock_4.png', variable='infla')
plot_shock(shock = shock, filename = 'Shock_4.png', df=df)
plot_norms(shock = shock, filename = 'Shock_4Norms.png', df=df)
other_plots(shock, df=df)

shock4 = shock.round(decimals = 3).tail(1).transpose().loc['alpha':,:]
shock4.columns = ['$\pi$']
print(shock4.to_latex())
#+END_SRC

#+RESULTS:
#+begin_export latex
\begin{tabular}{lr}
\toprule
{} &         \$\textbackslash pi\$ \\
\midrule
alpha     &  1.000000e+00 \\
gamma\_F   &  8.000000e-02 \\
gamma\_u   &  9.000000e-02 \\
omega     &  2.500000e-01 \\
rm        &  1.000000e-02 \\
spread\_l  &  0.000000e+00 \\
spread\_mo &  0.000000e+00 \\
un        &  8.000000e-01 \\
v         &  1.200000e+00 \\
phi\_0     &  2.500000e-02 \\
phi\_1     &  1.000000e-01 \\
R         &  7.000000e-01 \\
infla     &  5.000000e-02 \\
gC        &  0.000000e+00 \\
real\_data &  0.000000e+00 \\
\_K\_f\_\_1   &  9.991086e+25 \\
\_M\_h\_\_1   &  1.594162e+27 \\
\_MO\_\_1    &  4.902237e+26 \\
\_Lk\_\_1    &  1.143855e+27 \\
\_Ck\_\_1    &  3.203113e+25 \\
\_Lf\_\_1    & -3.991676e+25 \\
\_h\_\_1     &  4.300000e-02 \\
\_L\_\_1     &  1.103939e+27 \\
\_M\_\_1     &  1.594162e+27 \\
\_K\_HD\_\_1  &  4.902237e+26 \\
\_I\_h\_\_1   &  1.372763e+25 \\
\_ph\_\_1    &  1.472685e+21 \\
TIME      &  1.051000e+03 \\
Ih/Y      &  2.120000e-01 \\
I/Y       &  2.550000e-01 \\
Z/Y       &  7.070000e-01 \\
gY        &  2.900000e-02 \\
\bottomrule
\end{tabular}
#+end_export


** Merging tables and results                                        :ignore:

*** Table

#+ATTR_LATEX: :environment tabularx :placement [h] :center t :width \linewidth
#+BEGIN_SRC python :results raw table latex
base = model()
df = SolveSFC(base, time=1000)
df = df.round(decimals = 4).tail(1).transpose().loc['alpha':,:]
df.columns = ['Base scenario']

table = pd.merge(left = df, right = shock1, left_index = True, right_index = True)
table = pd.merge(left = table, right = shock2, left_index = True, right_index = True)
table = pd.merge(left = table, right = shock3, left_index = True, right_index = True)
table = pd.merge(left = table, right = shock4, left_index = True, right_index = True)
table = table.loc[:"infla",:] ######### Warning
table.index = [ ######### Warning
    '$\\alpha$',
    '$\gamma_F$',
    '$\gamma_u$',
    '$\omega$',
    '$rm$',
    '$\sigma_{l}$',
    '$\sigma_{mo}$',
    '$u_N$',
    '$v$',
    '$\phi_0$',
    '$\phi_1$',
    '$R$',
    '$\pi$'
]
table.to_latex(
    "./tabs/parameters.tex",
    #column_format = 'cccccc',
    escape=False, 
    float_format="{:0.4f}".format,
)

print(table.to_latex(
    escape=False, 
    float_format="{:0.4f}".format,
))
#+END_SRC

#+RESULTS:
#+begin_export latex
\begin{tabular}{lrrrrr}
\toprule
{} &  Base scenario &  $\Delta \phi_0$ &  $\Delta \omega$ &  $\Delta rm$ &  $\pi$ \\
\midrule
$\alpha$      &         1.0000 &           1.0000 &           1.0000 &       1.0000 & 1.0000 \\
$\gamma_F$    &         0.0800 &           0.0800 &           0.0800 &       0.0800 & 0.0800 \\
$\gamma_u$    &         0.0900 &           0.0900 &           0.0900 &       0.0900 & 0.0900 \\
$\omega$      &         0.2500 &           0.2500 &           0.2400 &       0.2500 & 0.2500 \\
$rm$          &         0.0100 &           0.0100 &           0.0100 &       0.0120 & 0.0100 \\
$\sigma_{l}$  &         0.0000 &           0.0000 &           0.0000 &       0.0000 & 0.0000 \\
$\sigma_{mo}$ &         0.0000 &           0.0000 &           0.0000 &       0.0000 & 0.0000 \\
$u_N$         &         0.8000 &           0.8000 &           0.8000 &       0.8000 & 0.8000 \\
$v$           &         1.2000 &           1.2000 &           1.2000 &       1.2000 & 1.2000 \\
$\phi_0$      &         0.0250 &           0.0300 &           0.0250 &       0.0250 & 0.0250 \\
$\phi_1$      &         0.1000 &           0.1000 &           0.1000 &       0.1000 & 0.1000 \\
$R$           &         0.7000 &           0.7000 &           0.7000 &       0.7000 & 0.7000 \\
$\pi$         &         0.0000 &           0.0000 &           0.0000 &       0.0000 & 0.0500 \\
\bottomrule
\end{tabular}
#+end_export

*** Figure 1

#+BEGIN_SRC python :results graphics file :file ./figs/Compared_Shocks_1.png :cache no
base = model()
df = SolveSFC(base, time=1000)
df["Z/Y"] = df["Z"]/df["Y"]
df_base = df

fig, ax = plt.subplots(2,2, figsize=(19.20,10.80))

df1['Y'].pct_change().plot(ls ='-',lw=3, 
                           #color = "black", 
                           color = "tab:blue",
                           label = "$\\Downarrow \omega$ (Shock 1)", ax = ax[0,0]
)
df2['Y'].pct_change().plot(ls ='-', lw=3, 
                           #color = "darkgray",
                           color = "tab:red",
                           label = "$\\Uparrow \pi$ (Shock 2)", ax = ax[0,0])
df3['Y'].pct_change().plot(ls ='-', lw=3, 
                           #color = "gray", 
                           color = "tab:green",
                           label = "$\\Uparrow r_m$ (Shock 3)", ax = ax[0,0])
#df3b['Y'].pct_change().plot(ls ='-', lw=3, color = "darkgreen", label = "$\\Downarrow r_m$ (Shock 3)", ax = ax[0,0])
ax[0,0].axhline(y = df_base['g_Z'].iloc[-1], ls ='--', lw=1, 
                #color = "lightgray", 
                color = "black",
                label = "Baseline")
ax[0,0].ticklabel_format(useOffset=False)
ax[0,0].set_title('A GDP growth rate ($g$)')

df1['Z/Y'].plot(ls ='-', lw=3, 
                #color = "black", 
                color = "tab:blue",
                label = "$\\Downarrow \omega$ (Shock 1)", ax = ax[0,1])
df2['Z/Y'].plot(ls ='-', lw=3, 
                #color = "darkgray", 
                color = "tab:red",
                label = "$\\Uparrow \pi$ (Shock 2)", ax = ax[0,1])
df3['Z/Y'].plot(ls ='-', lw=3, 
                #color = "gray", 
                color = "tab:green",
                label = "$\\Uparrow r_m$ (Shock 3)", ax = ax[0,1])
#df3b['Z/Y'].plot(ls ='-', lw=3, color = "darkgreen", label = "$\\Downarrow r_m$ (Shock 3)", ax = ax[0,1])
ax[0,1].axhline(y = df_base['Z/Y'].iloc[-1], ls ='--', lw=1.5, 
                #color = "lightgray", 
                color = "black",
                label = "Baseline")
ax[0,1].ticklabel_format(useOffset=False)
ax[0,1].set_title('B Autonomous Expenditure\nShare on GDP ($Z/Y$)')

df1['u'].plot(ls ='-', lw=3, 
              #color = "black", 
              color = "tab:blue", 
              label = "$\\Downarrow \omega$ (Shock 1)", ax = ax[1,0])
df2['u'].plot(ls ='-', lw=3, 
              #color = "darkgray",
              color = "tab:red",  
              label = "$\\Uparrow \pi$ (Shock 2)", ax = ax[1,0])
df3['u'].plot(ls ='-', lw=3, 
              #color = "gray", 
              color = "tab:green", 
              label = "$\\Uparrow r_m$ (Shock 3)", ax = ax[1,0])
#df3b['u'].plot(ls ='-', lw=3, color = "darkgreen", label = "$\\Downarrow r_m$ (Shock 4)", ax = ax[1,0])
ax[1,0].axhline(y = df_base['u'].iloc[-1], ls ='--', lw=1.5, 
                #color = "lightgray",
                color = "black",  
                label = "Baseline")
ax[1,0].ticklabel_format(useOffset=False)
ax[1,0].set_title('C Capacity utilization rate ($u$)')

df1['h'].plot(ls ='-', lw=3, 
              #color = "black", 
              color = "tab:blue", 
              label = "$\\Downarrow \omega$ (Shock 1)", ax = ax[1,1])
df2['h'].plot(ls ='-', lw=3, 
              #color = "darkgray", 
              color = "tab:red", 
              label = "$\\Uparrow \pi$ (Shock 2)", ax = ax[1,1])
df3['h'].plot(ls ='-', lw=3, 
              #color = "gray", 
              color = "tab:green", 
              label = "$\\Uparrow r_m$ (Shock 3)", ax = ax[1,1])
#df3b['h'].plot(ls ='-', lw=3, color = "darkgreen", label = "$\\Downarrow r_m$ (Shock 3)", ax = ax[1,1])
ax[1,1].axhline(y = df_base['h'].iloc[-1], ls ='--', lw=1.5, color = "lightgray", label = "Baseline")
ax[1,1].ticklabel_format(useOffset=False)
ax[1,1].set_title('D Marginal propsenty\nto invest ($h$)')


sns.despine()
plt.tight_layout(rect=[0, 0.03, .85, 0.95])
ax[1,1].legend(loc='center left', bbox_to_anchor=(1.00, 1.25))
#plt.show()
fig.savefig("./figs/Compared_Shocks_1.png", dpi = 300)
#+END_SRC

#+RESULTS:
[[file:./figs/Compared_Shocks_1.png]]


[[file:./figs/Compared_Shocks_1.png]]

*** Figure 2
    
#+BEGIN_SRC python :results graphics file :file ./figs/Compared_Shocks_2.png :cache no
base = model()
df = SolveSFC(base, time=1000)
df["Z/Y"] = df["Z"]/df["Y"]
df_base = df

df1["TIME"] = [i+1 for i in range(len(df1.index))]
df2["TIME"] = [i+1 for i in range(len(df2.index))]
df3["TIME"] = [i+1 for i in range(len(df3.index))]
#df3b["TIME"] = [i+1 for i in range(len(df3.index))]

fig, ax = plt.subplots(2,2, figsize=(19.20,10.80))

sns.scatterplot(y = 'Z/Y', x='u', data=df1, size="TIME", sizes = (1,100), color = 'tab:blue', legend=False, ax=ax[0,0])
sns.scatterplot(y = 'Z/Y', x='u', data=df2, size="TIME", sizes = (1,100), color = 'tab:red', legend=False, ax=ax[0,0])
sns.scatterplot(y = 'Z/Y', x='u', data=df3, size="TIME", sizes = (1,100), color = 'tab:green', legend=False, ax=ax[0,0])
#sns.scatterplot(y = 'Z/Y', x='u', data=df3b, size="TIME", sizes = (1,100), color = 'tab:green', legend=False, ax=ax[0,0])

sns.lineplot(y = 'Z/Y', x='u', data=df1, sort=False, color = 'tab:blue', ax=ax[0,0])
sns.lineplot(y = 'Z/Y', x='u', data=df2, sort=False, color = 'tab:red', ax=ax[0,0])
sns.lineplot(y = 'Z/Y', x='u', data=df3, sort=False, color = 'tab:green', ax=ax[0,0])
#sns.lineplot(y = 'Z/Y', x='u', data=df3b, sort=False, color = 'tab:green', ax=ax[0,0])
ax[0,0].set_title('A Share of NCC autonomous expenditures and capacity utilization\n(Dots size grow in time)')

df1['K_k'].plot(ls ='-', lw=3, color = "tab:blue", label = "$\\Downarrow \omega$ (Shock 1)", ax = ax[0,1])
df2['K_k'].plot(ls ='-', lw=3, color = "tab:red", label = "$\\Uparrow \pi$ (Shock 2)", ax = ax[0,1])
df3['K_k'].plot(ls ='-', lw=3, color = "tab:green", label = "$\\Uparrow r_m$ (Shock 3)", ax = ax[0,1])
#df3b['K_k'].plot(ls ='-', lw=3, color = "tab:green", label = "$\\Downarrow r_m$ (Shock 3)", ax = ax[0,1])
ax[0,1].axhline(y = df_base['K_k'].iloc[-1], ls ='--', lw=1.5, color = "black", label = "Baseline")
ax[0,1].ticklabel_format(useOffset=False)
ax[0,1].set_title('B Houses share on\nReal Assets ($K_k$)')

((df1["DN"][1:]*df1["rm"][2:])/df1['K_HD'][2:]).plot(ls ='-', lw=3, color = "tab:blue", label = "$\\Downarrow \omega$ (Shock 1)", ax = ax[1,0])
((df2["DN"][1:]*df2["rm"][2:])/df2['K_HD'][2:]).plot(ls ='-', lw=3, color = "tab:red", label = "$\\Uparrow \pi$ (Shock 2)", ax = ax[1,0])
((df3["DN"]*df3["rm"])[1:]/df3['K_f'][1:]).plot(ls ='-', lw=3, color = "tab:green", label = "$\\Uparrow r_m$ (Shock 3)", ax = ax[1,0])
#((df3b["MO"]*df3b["rmo"][1:] + df3b["Lk"]*df3b["rl"][1:] - df3b["M"]*df3b["rl"][1:])/df3b['K_HD'][1:]).plot(ls ='-', lw=3, color = "tab:green", label = "$\\Uparrow r_m$ (Shock 3)", ax = ax[1,0])
ax[1,0].axhline(y = ((df_base["DN"].iloc[-1]*df_base["rm"].iloc[-1])/df_base['K_HD'].iloc[-1]), ls ='--', lw=1.5, color = "black", label = "Baseline")
ax[1,0].ticklabel_format(useOffset=False)
ax[1,0].set_title('C Capitalist Indebtedness\n(as % $K_{HD}$)')

(df1['Fn']/df1['K_f']).plot(ls ='-', lw=3, color = "tab:blue", label = "$\\Downarrow \omega$ (Shock 1)", ax = ax[1,1])
(df2['Fn']/df2['K_f']).plot(ls ='-', lw=3, color = "tab:red", label = "$\\Uparrow \pi$ (Shock 2)", ax = ax[1,1])
(df3['Fn']/df3['K_f']).plot(ls ='-', lw=3, color = "tab:green", label = "$\\Uparrow r_m$ (Shock 3)", ax = ax[1,1])
#(df3b['Fn']/df3b['K_f']).plot(ls ='-', lw=3, color = "tab:green", label = "$\\Downarrow r_m$ (Shock 3)", ax = ax[1,1])
ax[1,1].axhline(y = (df_base['Fn']/df_base['K_f']).iloc[-1], ls ='--', lw=1.5, color = "black", label = "Baseline")
ax[1,1].ticklabel_format(useOffset=False)
ax[1,1].set_title('D Net profit rate')

sns.despine()
plt.tight_layout(rect=[0, 0.03, .85, 0.95])
ax[1,1].legend(loc='center left', bbox_to_anchor=(1.0, 1.25))
#plt.show()
fig.savefig("./figs/Compared_Shocks_2.png", dpi = 600)
#+END_SRC




[[file:./figs/Compared_Shocks_2.png]]


** Real data                                                         :ignore:

*** Simulation   
#+BEGIN_SRC python :tangle ./codes/Simulation.py

gCk = data["1992-01-01":]["$g_{I_h}$"].mean().round(3) # Média geométrica


df = SolveSFC(model(real=1, gC=gCk, R = 0.0), time=initial)
base = model()
SolveSFC(base, time=initial, table=False)

for i in data.index:
    lagged = [key for key in base.solutions[-1].keys()]
    lagged = [i for i in lagged if "__" in i]
    for j in lagged:
        del base.solutions[-1][j]
    base.set_values(base.solutions[-1])
    base.set_values({
            'own':data['Own interest rate'][i],
            'infla':data['Inflation'][i],
            'rm':data['Mortgage interest rate'][i], # Changed to rm instead of rmo
            'real_data': 1.0,
            'R': 0.0,
            'gC': gCk,
        })
    try: 
        SolveSFC(base, time=shock_duration, table=False)
    except Exception as e:
        #print(f'For time = {i}, {e}')
        pass
    
shock = SFCTable(base)[initial:]
shock["Z/Y"] = shock["Z"]/shock["Y"]
#+END_SRC

*** Plots

#+BEGIN_SRC python :tangle ./codes/Simulation.py :results graphics
base = model()
df = SolveSFC(base, time=1000)
df["Z/Y"] = df["Z"]/df["Y"]
df_base = df

shock["TIME"] = [i+1 for i in range(len(shock.index))]

# First shock
fig, ax = plt.subplots(2,2, figsize=(19.20,10.80))

shock["$I_{h}$"] = shock["I_h"]
shock["$I_{f}$"] = shock["I_f"]

shock[['Y', '$I_{h}$', '$I_{f}$']].pct_change().plot(ls ='-', lw=3, ax = ax[0,0], color=("tab:blue", "tab:red", "tab:green"))
ax[0,0].axhline(y = df_base['g_Z'].iloc[-1], ls ='--', lw=1, color = "black", label = "Baseline")
ax[0,0].ticklabel_format(useOffset=False)
ax[0,0].set_title('A Selected growth rates')

shock['Z/Y'].plot(ls ='-', lw=3, color = "black", label = "Real data", ax = ax[1,0])
ax[1,0].axhline(y = df_base['Z/Y'].iloc[-1], ls ='--', lw=1.5, color = "lightgray", label = "Baseline")
ax[1,0].ticklabel_format(useOffset=False)
ax[1,0].set_title('C Autonomous Expenditure\nShare on GDP ($Z/Y$)')

shock['u'].plot(ls ='-', lw=3, color = "black", label = "Real data", ax = ax[0,1])
ax[0,1].axhline(y = df_base['u'].iloc[-1], ls ='--', lw=1.5, color = "lightgray", label = "Baseline")
ax[0,1].ticklabel_format(useOffset=False)
ax[0,1].set_title('B Capacity utilization rate ($u$)')

#shock['h'].plot(ls ='-', lw=3, color = "black", label = "Real data", ax = ax[1,1])
#ax[1,1].axhline(y = df_base['h'].iloc[-1], ls ='--', lw=1.5, color = "lightgray", label = "Baseline")
#ax[1,1].ticklabel_format(useOffset=False)
#ax[1,1].set_title('Marginal propsenty\nto invest ($h$)')

sns.scatterplot(y = 'Z/Y', x='u', data=shock, size="TIME", sizes = (1,100), color = 'black', legend=False, ax=ax[1,1])

sns.lineplot(y = 'Z/Y', x='u', data=shock, sort=False, color = 'black', ax=ax[1,1], legend=False)
ax[1,1].set_title('D Share of residential investment and capacity utilization\n(Dots size grow in time)')


sns.despine()
plt.tight_layout(rect=[0, 0.03, .85, 0.95])
#ax[1,1].legend(loc='center left', bbox_to_anchor=(1.0, 1.25))
#plt.show()
fig.savefig("./figs/Real_Shocks_1.png", dpi = 600)


# Second Shock
fig, ax = plt.subplots(2,2, figsize=(19.20,10.80))

sns.scatterplot(y = 'Z/Y', x='u', data=shock, size="TIME", sizes = (1,100), color = 'black', legend=False, ax=ax[0,0])

sns.lineplot(y = 'Z/Y', x='u', data=shock, sort=False, color = 'black', ax=ax[0,0])
ax[0,0].set_title('A Share of residential investment and capacity utilization\n(Dots size grow in time)')

shock['K_k'].plot(ls ='-', lw=3, color = "black", label = "Real data", ax = ax[0,1])
ax[0,1].axhline(y = df_base['K_k'].iloc[-1], ls ='--', lw=1.5, color = "lightgray", label = "Baseline")
ax[0,1].ticklabel_format(useOffset=False)
ax[0,1].set_title('B Houses share on\nReal Assets ($K_k$)')

((shock["DN"]*shock["rm"][2:])/shock['YDk'][2:]).plot(ls ='-', lw=3, color = "black", label = "Real data", ax = ax[1,0])
ax[1,0].axhline(y = ((df_base["DN"].iloc[-2]*df_base["rm"].iloc[-1])/df_base['YDk'].iloc[-1]), ls ='--', lw=1.5, color = "lightgray", label = "Baseline")
ax[1,0].ticklabel_format(useOffset=False)
ax[1,0].set_title('C Capitalist Indebtedness\n(as % $YD_k$)')

(shock['Fn']/shock['K_f']).plot(ls ='-', lw=3, color = "black", label = "Real data", ax = ax[1,1])
ax[1,1].axhline(y = (df_base['Fn']/df_base['K_f']).iloc[-1], ls ='--', lw=1.5, color = "lightgray", label = "Baseline")
ax[1,1].ticklabel_format(useOffset=False)
ax[1,1].set_title('D Net profit rate')

sns.despine()
plt.tight_layout(rect=[0, 0.03, .85, 0.95])
ax[1,1].legend(loc='center left', bbox_to_anchor=(1.0, 1.25))
#plt.show()
fig.savefig("./figs/Real_Shocks_2.png", dpi = 600)
#+END_SRC

#+RESULTS:



* Numerical Simulations                                              :ignore:
  #+LATEX: \label{sec:Experiments}

** Introduction                                                      :ignore:

In this Section, we present the results of the following experiments: 
    (i) wage-share decrease;
    (ii) real estate inflation and;
    (iii) deposits interest rate increase.
In order to evaluate if our model is able to reproduce some stylized facts, we introduce U.S. houses own rate of interest observed data (from 1992 to 2019) into our numerical simulation.
Before we move foward, it worth mentioning that we use \citeauthor*{fazzari-2020-deman-led}'s  citeyear:fazzari-2020-deman-led parameter values calibrated for the U.S. economy for a similar time range (from 1980 to 2016).
Our first experiment assess if income distribution has a level effect on output — as in cite:mandarino-2020-worker-debt — or growth rate effect — as in cite:brochier_supermultiplier_2018.
Real estate inflation increase experiment is motivated by recent US experience (from 1992 to 2019) as discussed in Section ref:sec:empirical while the last simulation aims to evaluate indebtedness stability.
Table \ref{tab:param} in Appendix ref:append:Data presents the parameters of simulation and Table \ref{ResumoChoques} compare each result to baseline.

#+BEGIN_COMMENT
Finally, Appendix \ref{Appen:Sensibility} presents a primer parameters sensibility analysis.

[fn:5] Simulation scripts are available under request. It worth noting that our experiments are simulated using /pysolve3/ package available at [[https://github.com/gpetrini/pysolve3]]. Implementation and improvement requests are welcome.

#+END_COMMENT


#+RESULTS:
:results:
# Out [2]: 
:end:

** Wage-share decrease
   #+LATEX: \label{sec:Exp1}

A wage-share decrease has permanent negative impact on output level --- due to changes on the supermultiplier --- and temporary negative effects on degree of capacity utilization (see Figure ref:fig:results_1 A).
So, aggregate demand growth level is temporarily smaller than baseline as a result of the lower supermultiplier.
As a consequence of this negative level effect, both accumulation growth rate and marginal propensity to invest temporaly decline while NCC autonomous expenditures share on GDP increases.
Since NCC autonomous expenditures growth rate remains unchanged and its share on GDP increases, aggregate demand grows faster than accumulation rate.
As a result, degree of capacity utilization is higher than the normal one.
During the traverse, marginal propensity to invest endogenously adjust to discrepancies between actual and normal utilization rates.
Consequently, non-residential investment growth rate increases faster than aggregate demand.
This endogenous adjustment process continues as long as actual capacity utilization rate is different from the normal one.
In summary, we report standards SSM model results:
    (i) marginal propensity to invest decrease is temporally and returns to baseline level;
    (ii) utilization rate moves towards normal one;
    (iii) supermultiplier decreases and autonomous expenditures share increases due to GDP decline and; 
    (iv) since autonomous expenditures growth rate does not change, distribution effects on growth rates are temporary. 


Despite temporary effects in growth rate, wage-share decrease has a permanent effect in house share on total capital stock (see Equation ref:k_long and Figure ref:fig:results_2 B).
As a consequence of the initially lower accumulation rate, total capital stock also grows at a temporarily lower rate.
However, since residencial investment growth rate remains unchanged, its share on total capital stock increases.
#+LATEX:%Another persistent effect is the higher capitalists' indebtedness compared to baseline despite the profit-share increase.
#+LATEX:This result is explained by the negative level effect on profits as a consequence of the negative effect on GDP and subsequent decrease in capitalists' disposable income.
#+LATEX:In other words, we report a paradox in capitalists attempt to increase their profit share which results a negative effect both on net profits and capitalists' disposable income.

Finally, we also report a persistent effect on firms' balance sheet due to wage-share decrease.
The negative level effect on GDP implies an already mentioned temporally decrease in marginal propensity to invest.
As a consequence of the initially lower accumulation rate and higher profit share, firms' loan-to-capital ratio decrease.
Thus, according to Equation ref:Long_netprofit_ratio, gross and net profit rate remain persistently close to each other (see Figure ref:fig:results_2 D).
Therefore, as profits distribution policy remains the same, firms require less external funding so its indebtedness decreases.

*Nota:* Farei referência às equações stock/flow quando terminar esta seção

** Real estate inflation increase
#+LATEX: \label{sec:Exp2}


An increase of real estate inflation implies a higher residential investment growth due to houses own rate of interest decrease.
As a result, both GDP growth rate and degree of capacity utilization increase as well.
Since firms react to discrepancies between actual and normal degree of capacity utilization rate, non-residential investment growth rate 
is temporally higher than GDP growth rate due to marginal propensity to invest adjustment.
Furthermore, capitalists' disposable income also increases as a result of the already mentioned higher GDP growth rate.
Since loans interest remains unchanged, capitalists' indebtedness ratio decreases.
During the traverse, gross and net profit rate are temporally close to each other as a result of profits level increase, so firms' indebtedness decreases as well.
Therefore, similar to textcite:mandarino-2020-worker-debt, we also report paradox of debt.

In summary, we report SSM standard fully-adjusted position results:
    (i) GDP growth rate converges to NCC autonomous expenditure growth rate;
    (ii) marginal propensity to invest remains persistently higher compared to baseline and;
    (iii) utilization rate moves gradually towards the normal one.
As mentioned before, our model distinctiveness is the existence of two types of capital stocks since households invest as well.


The most distinct result is real houses share decreases on total capital stock as a result of residential investment growth rate increase.
Although counterintuitive, this result is similar to the conventional paradox of debt.
This is the case since houses are always equivalent to  mortgage debt.
Additionally, this result is in line with SSM literature.
Firms investment follows capital stock adjustment principle, so a higher firms investment growth rate implies that
GDP grows faster than residential investment.
Thus, both residential investment share on GDP and degree of capacity  utilization decrease.
In other words, both autonomous expenditures share on GDP and houses share on real assets (see Equation ref:partial_pi) decline as a result of the already described non-residential investment positive reaction.



#+BEGIN_COMMENT
Figure \ref{fig:shock_4norm} in Appendix \ref{appen:Simulation} shows that capitalists' nominal net wealth grows faster than disposable income, so the ratio between both converges to zero.

Finally, it worth noting that real estate inflation also has permanent effects over real stock/flow ratios due to capital gains.

Besides the usual SSM results, we report some particularities regarding real assets composition.
#+END_COMMENT
** Interest rate increase
#+LATEX: \label{sec:Exp3}

A increase in benchmark interest rate  has a persistent effect on long-run growth rate since houses own interest rate increases as well[fn:Juros].
Non-residential investment growth rate decreases as a result of residential investment growth rate permanent decline, so houses share on real assets increases.
Compared to the previous experiments, this shock has opposite effects on long-run growth rates, NCC autonomous expenditure share on GDP, utilization rate and marginal propensity to invest  than the previous one (see Figure ref:fig:results_1).


[fn:Juros] Since we assume null spread on both mortgage and loans interest rate, an increase on deposits interest rate also increases the other ones. As a consequence, banks' net financial wealth remains unchanged.


In particular, we report a stronger negative effect over both capitalists' and firms' balance sheet than wage-share decrease (see figures ref:fig:results_1 and ref:fig:results_2).
This effect is a result of the temporarily stronger decline of GDP growth rate compared to NCC autonomous expenditure growth rate.
As a consequence of lower GDP growth rate, mass of profits also decreases.
Thus, capitalists' disposable income decreases more than debt-financed consumption growth rate.
Interest rate increase alone is enough to capitalists' indebtedness level to increase, however it is followed by GDP growth rate decrease, so the overall effect is stronger than wage-share decrease experiment (Section ref:sec:Exp1).
Regarding firms' balance sheet, we report a temporarily negative level effect on gross profit rate and a permanent one on net profit rate. 
So, there is a permanent increase in the gap between them due to increase in external funding and to the negative level effect on profits.
Therefore, we find a stable debt dynamics for both capitalists and firms (other parameters remaining unchanged).

*Nota:* Atualizar resultado do endividamento capitalista na tabela assim que for revisado.

** Summary                                                     :ignore:
*** Table                                                            :ignore:
#+BEGIN_SRC latex :tangle ./tabs/Summary_tab.tex
\begin{table}[H]
	\centering
	\caption{Shocks summary (compared to baseline)}
	\label{ResumoChoques}
	%\resizebox{\textwidth}{!}{%
		\begin{tabular}{c|c|c|c||c|c|c}
			\hline\hline
			\multirow{2}{*}{} & \multicolumn{3}{c||}{\textbf{traverse ($h \neq h^\star$)}} & \multicolumn{3}{c}{\textbf{Long-run ($h = h^\star$)}} \\ \cline{2-7} 
			&  \textbf{$\Downarrow \omega$} & \textbf{$\Uparrow \pi$} & \textbf{$\Uparrow rm$} &  \textbf{$\Downarrow \omega$} & \textbf{$\Uparrow \pi$} & \textbf{$\Uparrow rm$} \\ \hline
			\textbf{$g$}  & - & + & - & 0 & + & - \\ \hline
			\textbf{$g_Z$}  & 0 & + & -  & 0 & + & - \\ \hline
			\textbf{$u$}  & - & + & -  & 0 & 0 & 0 \\ \hline
			\textbf{$h$}  & - & + & -  & 0 & + & - \\ \hline
			\textbf{$k$}  & + & - & +  & + & - & + \\ \hline
			\textbf{$\frac{Z}{Y}$}  & + & - & +  & + & - & + \\ \hline
			\textit{$r_m\frac{(D - M)}{K_{HD}}$}  & - & - & +  & - & - & + \\ \hline\hline
		\end{tabular}%
	%}
	\caption*{\textbf{Source:} Authors' Elaboration}
\end{table}
#+END_SRC

#+RESULTS:
#+begin_export latex
\begin{table}[H]
	\centering
	\caption{Shocks summary (compared to baseline)}
	\label{ResumoChoques}
	%\resizebox{\textwidth}{!}{%
		\begin{tabular}{c|c|c|c||c|c|c}
			\hline\hline
			\multirow{2}{*}{} & \multicolumn{3}{c||}{\textbf{traverse ($h \neq h^\star$)}} & \multicolumn{3}{c}{\textbf{Long-run ($h = h^\star$)}} \\ \cline{2-7} 
			&  \textbf{$\Downarrow \omega$} & \textbf{$\Uparrow \pi$} & \textbf{$\Uparrow rm$} &  \textbf{$\Downarrow \omega$} & \textbf{$\Uparrow \pi$} & \textbf{$\Uparrow rm$} \\ \hline
			\textbf{$g$}  & - & + & - & 0 & + & - \\ \hline
			\textbf{$g_Z$}  & 0 & + & -  & 0 & + & - \\ \hline
			\textbf{$u$}  & - & + & -  & 0 & 0 & 0 \\ \hline
			\textbf{$h$}  & - & + & -  & 0 & + & - \\ \hline
			\textbf{$k$}  & + & - & +  & + & - & + \\ \hline
			\textbf{$\frac{Z}{Y}$}  & + & - & +  & + & - & + \\ \hline
			\textit{$r_m\frac{(D - M)}{K_{HD}}$}  & - & - & +  & - & - & + \\ \hline\hline
		\end{tabular}%
	%}
	\caption*{\textbf{Source:} Authors' Elaboration}
\end{table}
#+end_export


*** Figure I                                                         :ignore:
#+BEGIN_SRC latex
\begin{figure}[htb]
	\centering
	\caption{Experiments simulations (I)}
	\label{fig:results_1}
	\includegraphics[width=.8\textwidth]{./figs/Compared_Shocks_1.png}
	\caption*{\textbf{Source:} Authors' elaboration}
\end{figure}
#+END_SRC

#+RESULTS:
#+begin_export latex
\begin{figure}[htb]
	\centering
	\caption{Experiments simulations (I)}
	\label{fig:results_1}
	\includegraphics[width=.8\textwidth]{./figs/Compared_Shocks_1.png}
	\caption*{\textbf{Source:} Authors' elaboration}
\end{figure}
#+end_export

*** Figure II                                                        :ignore:
#+BEGIN_SRC latex
\begin{figure}[htb]
	\centering
	\caption{Experiments simulations (II)}
	\label{fig:results_2}
	\includegraphics[width=.8\textwidth]{./figs/Compared_Shocks_2.png}
	\caption*{\textbf{Source:} Authors' elaboration}
\end{figure}
#+END_SRC

#+RESULTS:
#+begin_export latex
\begin{figure}[htb]
	\centering
	\caption{Experiments simulations (II)}
	\label{fig:results_2}
	\includegraphics[width=.8\textwidth]{./figs/Compared_Shocks_2.png}
	\caption*{\textbf{Source:} Authors' elaboration}
\end{figure}
#+end_export



** Plugging real data
#+LATEX: \label{real_sim}

Finally, we include houses own interest rate data  discussed in section ref:sec:empirical (see Figure ref:propria_investo) into our model.
In order to do so, each year corresponds to ten simulated periods for visualization reasons.
Additionally, we have abandoned the assumption of a fixed share ($R$) between residential investment and capitalist consumption.
In order to include capitalists consumption without running into asymptotic paths, we defined its growth rate as the geometric average of residential investment growth rate from 1992 to 2019.

Although rudimentary, this procedure allows us to replicate some stylized facts presented in section ref:sec:empirical and in the literature (see Figure ref:fig:Realresults_1).
Similarly to Figure ref:fig:cycles, we report a clockwise relationship between autonomous expenditure share on GDP and capacity utilization rate.
With due mediation, we also report a smooth gravitation of capacity utilization ratio towards the normal one.
As expected, NCC autonomous expenditures (notably residential investment) describes accumulation and GDP growth rate. 
Together these results provide a first step towards the connection between asset bubbles and aggregate demand within the Sraffian Supermultiplier framework.






#+BEGIN_SRC latex
\begin{figure}[htb]
	\centering
	\caption{Real Data Experiments simulations}
	\label{fig:Realresults_1}
	\includegraphics[width=.8\textwidth]{./figs/Real_Shocks_1.png}
	\caption*{\textbf{Source:} Authors' elaboration}
\end{figure}
#+END_SRC

#+RESULTS:
#+begin_export latex
\begin{figure}[htb]
	\centering
	\caption{Real Data Experiments simulations}
	\label{fig:Realresults_1}
	\includegraphics[width=.8\textwidth]{./figs/Real_Shocks_1.png}
	\caption*{\textbf{Source:} Authors' elaboration}
\end{figure}
#+end_export


