#+OPTIONS: num:nil
#+TITLE: Qualitative Comparative Analysis (QCA) with R - European University Institute
#+AUTHOR: Gabriel Petrini
#+DATE: 2020
#+LANG: en

* LaTeX headers                                         :noexport:ignore:

* HTML headers                                         :noexport:ignore:
  #+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
  #+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>

  #+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
  #+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
  #+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.min.js"></script>
  #+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>


* R and python headers                                      :noexport:ignore:

#+PROPERTY: header-args:R  :session QCA :async t :results output :exports both
#+PROPERTY: header-args:ipython  :session QCA :async t :results output :exports both
#+PROPERTY: header-args:python  :session QCA :async t :results output :exports both  :python /usr/bin/python3


#+BEGIN_SRC R :results silent
library(QCA)
library(SetsMethods)
library(dplyr)
#+END_SRC



* Supervised Lab sessions

** Loading Data

1. Load IMF dataste

   
#+BEGIN_SRC python :tangle Lab.py
import pandas as pd

url = "https://www.dropbox.com/sh/xkfv65sh57j2coo/AAByiZOgf8wGnScsNAbW6ffxa/Material/Sample%20data%20and%20R%20scripts/imfraw.csv?dl=1"

file = './data/imfraw.csv'

df = pd.read_csv(file, sep=";", decimal = ",", index_col=[0]);
df.info()
#+END_SRC

#+RESULTS:
#+begin_example
<class 'pandas.core.frame.DataFrame'>
Index: 20 entries, AUT1 to SVK
Data columns (total 9 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   pos     20 non-null     float64
 1   cr      20 non-null     float64
 2   dc      20 non-null     float64
 3   eff     20 non-null     float64
 4   com     20 non-null     float64
 5   prg     20 non-null     int64  
 6   amb     20 non-null     float64
 7   red     20 non-null     float64
 8   dur     20 non-null     int64  
dtypes: float64(7), int64(2)
memory usage: 1.6+ KB
#+end_example


** Callibration

*** Crisp-sets

Let's calibrate Positive evaluation of cost-saving measures by IMF (POS) as a crisp set (POSCR). We want everything above the crossover point -0.15 to be set membership 1,  and everything below, 0. What would that mean concretely?


#+BEGIN_SRC python :tangle Lab.py
df["POS"] = (df["pos"] >= -0.15).astype(int)
print(df)
#+END_SRC

#+RESULTS:
#+begin_example
pos      cr    dc   eff   com  prg       amb   red  dur  POS
case                                                              
AUT1 -0.9   50.00  54.0  1.89  5.13    0  0.042553   2.0   47    0
AUT2  1.4   50.00  54.0  1.89  5.14    0  0.010345   0.6   58    1
BEL   0.1   54.54  63.0  1.59  5.20    0  0.040000   0.4   10    1
CZE  -2.4   45.45  50.0  1.01  4.52    0  0.062500   3.5   56    0
DEU  -1.8  100.00  60.0  1.55  5.37    0  0.083333   4.5   54    0
DNK   0.7  100.00  42.0  2.29  5.46    0  0.037209   1.6   43    1
ESP  -0.9    0.00  58.0  0.98  4.59    0  0.173684   3.3   19    0
FIN   0.3  100.00  45.0  2.24  5.47    0  0.024561   1.4   57    1
FRA  -0.3   88.41  42.0  1.44  5.13    0  0.087500   1.4   16    0
GBR  -3.7  100.00  49.0  1.56  5.19    0  0.194444  10.5   54    0
GRC1  0.5   73.73  31.0  0.52  4.04    1  0.192727  10.6   55    1
GRC2  0.2   73.73  31.0  0.52  3.99    1  0.081481   4.4   54    1
GRC3  1.4   36.84  31.0  0.52  3.92    1  0.084783   3.9   46    1
IRL  -1.8   86.28  41.0  1.31  4.74    1  0.602083  28.9   48    0
ITA1 -0.5  100.00  50.6  0.52  4.37    0  0.080769   2.1   26    0
ITA2 -1.5  100.00  50.6  0.52  4.37    0  0.153571   4.3   28    0
ITA3 -1.5  100.00  50.6  0.52  4.43    0  0.166667   4.0   24    0
PRT1 -1.0    0.00  42.0  1.04  4.38    0  0.207692   2.7   13    0
PRT2  0.0   66.67  42.0  1.04  4.40    1  0.083871   2.6   31    1
SVK   0.1    0.00  36.0  0.88  4.19    0  0.063158   1.2   19    1
#+end_example

In R it would be

~df$POS <- calibrate(imfraw$pos, type = "crisp", thresholds = -0.15, include = TRUE)~

*** Fuzzy set
    
**** Direct method of callibration

Let's calibrate the condition "Highly ambitious program (AMB)" using the thresholds in Table 2. You can see from table 2 that AMB consists of two indicators: 

Required reduction in fiscal balance in per cent (red), divided by duration of program in months (dur) we first combine dur and red to build this variable:

#+NAME: data
#+BEGIN_SRC python :tangle Lab.py  :results value file :file-ext csv :var filename="data.csv"
df["AMB"] = df["red"]/df["dur"]
df.index.name = ''
df.to_csv(filename)
#+END_SRC

#+RESULTS: data
[[file:data.csv]]



now we can calibrate amb. The thresholds in table 2 are 0.01 for "fully out", 0.1205 as a crossover point and	0.20 for fully in

#+BEGIN_SRC R :var file=data
df = read.csv(file)
df
#+END_SRC

#+RESULTS:
#+begin_example
      X  pos     cr   dc  eff  com prg        amb  red dur POS        AMB
1  AUT1 -0.9  50.00 54.0 1.89 5.13   0 0.04255319  2.0  47   0 0.04255319
2  AUT2  1.4  50.00 54.0 1.89 5.14   0 0.01034483  0.6  58   1 0.01034483
3   BEL  0.1  54.54 63.0 1.59 5.20   0 0.04000000  0.4  10   1 0.04000000
4   CZE -2.4  45.45 50.0 1.01 4.52   0 0.06250000  3.5  56   0 0.06250000
5   DEU -1.8 100.00 60.0 1.55 5.37   0 0.08333333  4.5  54   0 0.08333333
6   DNK  0.7 100.00 42.0 2.29 5.46   0 0.03720930  1.6  43   1 0.03720930
7   ESP -0.9   0.00 58.0 0.98 4.59   0 0.17368421  3.3  19   0 0.17368421
8   FIN  0.3 100.00 45.0 2.24 5.47   0 0.02456140  1.4  57   1 0.02456140
9   FRA -0.3  88.41 42.0 1.44 5.13   0 0.08750000  1.4  16   0 0.08750000
10  GBR -3.7 100.00 49.0 1.56 5.19   0 0.19444444 10.5  54   0 0.19444444
11 GRC1  0.5  73.73 31.0 0.52 4.04   1 0.19272727 10.6  55   1 0.19272727
12 GRC2  0.2  73.73 31.0 0.52 3.99   1 0.08148148  4.4  54   1 0.08148148
13 GRC3  1.4  36.84 31.0 0.52 3.92   1 0.08478261  3.9  46   1 0.08478261
14  IRL -1.8  86.28 41.0 1.31 4.74   1 0.60208333 28.9  48   0 0.60208333
15 ITA1 -0.5 100.00 50.6 0.52 4.37   0 0.08076923  2.1  26   0 0.08076923
16 ITA2 -1.5 100.00 50.6 0.52 4.37   0 0.15357143  4.3  28   0 0.15357143
17 ITA3 -1.5 100.00 50.6 0.52 4.43   0 0.16666667  4.0  24   0 0.16666667
18 PRT1 -1.0   0.00 42.0 1.04 4.38   0 0.20769231  2.7  13   0 0.20769231
19 PRT2  0.0  66.67 42.0 1.04 4.40   1 0.08387097  2.6  31   1 0.08387097
20  SVK  0.1   0.00 36.0 0.88 4.19   0 0.06315790  1.2  19   1 0.06315789
#+end_example

