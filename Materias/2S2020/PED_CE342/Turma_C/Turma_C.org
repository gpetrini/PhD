#+OPTIONS: toc:nil
#+TITLE: Notas CE 342/C
#+AUTHOR: Gabriel Petrini (PED)
#+DATE: 2020/2S
#+PROPERTY: COLUMNS %RA %TAREFA(Tarefa) %NOTA(Nota)
#+EXCLUDE_TAGS: private noexport
#+PROPERTY: header-args:python  :session *Turma_C* :exports results :results output replace :eval never-export
#+LATEX_HEADER: \usepackage{longtable, pdflscape, booktabs}

#+RESULTS:

* Configuração                                                     :noexport:

** Pacotes
#+BEGIN_SRC python
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import datetime
import numpy as np
np.random.seed(3421)
num_grupos = 12
Turma = "C"
full_path = './Materias/2S2020/PED_CE342/Turma_' + Turma
Resenhas = ["Monetaristas", "Novos Clássicos", "Novos Keynesianos", "Novo Consenso"]
#+END_SRC

#+RESULTS:

** Importando tabela Ana Rosa

#+BEGIN_SRC python :export no
df = pd.read_excel(
    #'Materias/2S2020/PED_CE342/Lista presença 2020.xlsx',
    '../Lista presença 2020.xlsx',
    sheet_name="CE342_" + Turma,
    parse_dates=True,
)
df["Nome"] = [nome.lower().strip() for nome in df["Nome"]] # Covert to lower case
df.set_index(["Nome"], inplace=True)
df.drop(["Unnamed: 17"], axis='columns', inplace=True) # Removendo coluna vazia e coluna de e-mails (é possível inferir)
#df.columns = pd.to_datetime(df.columns, errors='ignore', format='%Y-%m-%d')
df['RA'] = [str(i).rjust(6,'0') for i in df['RA']]
min_df = df[["RA"]].astype(str)
#+END_SRC

#+RESULTS:

** Funções

#+BEGIN_SRC python
def importar_ext(Turma=Turma, data="2020-10-19", prefix='.'):
    tmp = pd.read_csv(
        f'{prefix}/Presença/Turma_{Turma} ({data}).csv',
        skiprows=3,
        usecols=[0,6,7],
        sep=',',
    )

    tmp["Nome"] = [nome.lower() for nome in tmp["Names"]]

    tmp["Tempo"] = [float(str(i).replace('"', '')) for i in tmp[' "# of Checks"']]
    tmp["Entrada"] = [float(str(i).replace('"', '')) for i in tmp[' "Joined"']]
    tmp.set_index(['Nome'], inplace=True)
    tmp[f"{data}"] = ((tmp["Tempo"]/np.max(tmp["Tempo"]))*100).round(2)
    tmp = tmp[:-2][[f"{data}"]].fillna(0) # Descartando rodapé
    #midx = pd.MultiIndex.from_product([[f'{data}'], ['Presença', 'Entrada']], names=['Data', f'Turma {Turma}']) # criando multiindex
    #tmp = pd.DataFrame(tmp, columns=midx) # Criando df com multindex

    return tmp


#+END_SRC

#+RESULTS:

** Merge

#+BEGIN_SRC python
monetaristas = pd.read_csv(
    #    full_path +
    "."
    + "/Notas/Monetaristas.csv"
)[["Endereço de e-mail", "Nota", "Status da atividade"]]
monetaristas["RA"] = [i[1:7] for i in monetaristas["Endereço de e-mail"]]
monetaristas.drop(
    ["Endereço de e-mail", "Status da atividade"], axis="columns", inplace=True
)
monetaristas.set_index("RA", inplace=True)
monetaristas.columns = ["Resenha Monetaristas"]

nv_classicos = pd.read_csv(
    #    full_path +
    "."
    + "/Notas/NovosClassicos.csv"
)[["Endereço de e-mail", "Nota"]]
nv_classicos["RA"] = [i[1:7] for i in nv_classicos["Endereço de e-mail"]]
nv_classicos.drop(["Endereço de e-mail"], axis="columns", inplace=True)
nv_classicos.set_index("RA", inplace=True)
nv_classicos.columns = ["Resenha Novos Clássicos"]

nv_keynesianos = pd.read_csv(
    #    full_path +
    "."
    + "/Notas/NovosKeynesianos.csv"
)[["Endereço de e-mail", "Nota"]]
nv_keynesianos["RA"] = [i[1:7] for i in nv_keynesianos["Endereço de e-mail"]]
nv_keynesianos.drop(["Endereço de e-mail"], axis="columns", inplace=True)
nv_keynesianos.set_index("RA", inplace=True)
nv_keynesianos.columns = ["Resenha Novos Keynesianos"]

ncm = pd.read_csv(
    #    full_path +
    "."
    + "/Notas/NCM.csv"
)[["Endereço de e-mail", "Nota"]]
ncm["RA"] = [i[1:7] for i in ncm["Endereço de e-mail"]]
ncm.drop(["Endereço de e-mail"], axis="columns", inplace=True)
ncm.set_index("RA", inplace=True)
ncm.columns = ["Resenha Regime de Metas"]

df = (
    min_df.reset_index()
    .merge(
        monetaristas.reset_index(),
        how="left",
    )
    .join(importar_ext(Turma=Turma, data="2020-10-19"), how="left", on="Nome")
    .join(importar_ext(Turma=Turma, data="2020-10-26"), how="left", on="Nome")
    .set_index("RA")
    .join(importar_ext(Turma=Turma, data="2020-11-09"), how="left", on="Nome")
    .reset_index()
    .merge(
        nv_classicos.reset_index(),
        how="left",
    )
    .set_index("RA")
    .join(importar_ext(Turma=Turma, data="2020-11-16"), how="left", on="Nome")
    .join(importar_ext(Turma=Turma, data="2020-11-23"), how="left", on="Nome")
    .reset_index()
    .merge(nv_keynesianos.reset_index(), how="left")
    .set_index("RA")
    .join(importar_ext(Turma=Turma, data="2020-11-30"), how="left", on="Nome")
    .reset_index()
    .merge(ncm.reset_index(), how="left")
    .set_index("RA")
    .join(importar_ext(Turma=Turma, data="2020-12-14"), how="left", on="Nome")
)
df["Email"] = [
    df["Nome"][i][0] + str(df.index[i]) + "@dac.unicamp.br"
    for i in range(len(df.index))
]
#+END_SRC

#+RESULTS:



* Monetaristas

** Pendências                                                        :ignore:

** Notas                                                             :ignore:

#+NAME:Monetaristas
#+BEGIN_SRC python :results latex table
print('\\begin{center}')
print(
    df[["Resenha Monetaristas"]].to_latex(
        caption=f"Notas das resenhas - {Resenhas[0]}",
        bold_rows=True,
        longtable=True,
        na_rep='-',
    ),end='')
print('\end{center}')
#+END_SRC

#+RESULTS: Monetaristas
#+begin_export latex
\begin{center}
\begin{longtable}{lr}
\caption{Notas das resenhas - Monetaristas}\\
\toprule
{} &  Resenha Monetaristas \\
\textbf{RA    } &                       \\
\midrule
\endhead
\midrule
\multicolumn{2}{r}{{Continued on next page}} \\
\midrule
\endfoot

\bottomrule
\endlastfoot
\textbf{230645} &                  50.0 \\
\textbf{213549} &                  30.0 \\
\textbf{257748} &                  50.0 \\
\textbf{232568} &                  70.0 \\
\textbf{233566} &                  30.0 \\
\textbf{215626} &                   0.0 \\
\textbf{091108} &                  50.0 \\
\textbf{234311} &                  50.0 \\
\textbf{216397} &                  30.0 \\
\textbf{197474} &                  50.0 \\
\textbf{234982} &                   0.0 \\
\textbf{235042} &                   0.0 \\
\textbf{197724} &                  50.0 \\
\textbf{217350} &                  30.0 \\
\textbf{174154} &                  30.0 \\
\textbf{237534} &                  30.0 \\
\textbf{237856} &                  50.0 \\
\textbf{199967} &                  70.0 \\
\textbf{103034} &                  50.0 \\
\textbf{172577} &                  50.0 \\
\textbf{159866} &                  50.0 \\
\textbf{221896} &                  70.0 \\
\textbf{257876} &                 100.0 \\
\textbf{242087} &                   0.0 \\
\textbf{242328} &                  50.0 \\
\textbf{147614} &                   0.0 \\
\textbf{176104} &                   0.0 \\
\textbf{205149} &                 100.0 \\
\textbf{205151} &                   0.0 \\
\textbf{244207} &                  70.0 \\
\textbf{158425} &                  50.0 \\
\textbf{257932} &                 100.0 \\
\textbf{177964} &                  70.0 \\
\textbf{245099} &                  50.0 \\
\textbf{206806} &                  50.0 \\
\textbf{225851} &                  50.0 \\
\end{longtable}
\end{center}
#+end_export




** Gráficos                                                          :ignore:
*** Notas
#+BEGIN_SRC python :results graphics file :file ./figs/monetaristas.png
fig, ax = plt.subplots(1,2, figsize=(8,5), sharey=True)

sns.distplot(df['Resenha Monetaristas'], hist=True, kde=True, 
             bins=int(10), color = 'darkblue', 
             hist_kws={'edgecolor':'black'}, ax=ax[0],
             kde_kws={'linewidth': 4, 'shade': True})

ax[0].set_title(f'Nota das resenhas\nTurma {Turma}')
ax[0].text(90, 0.03, f'$\mu = ${df["Resenha Monetaristas"].mean().round(1)/10}', fontsize=12)
ax[0].text(90, 0.027, f'$\sigma = ${df["Resenha Monetaristas"].std().round(1)/10}', fontsize=12)


sns.distplot(df[df['Resenha Monetaristas']>0]['Resenha Monetaristas'], hist=True, kde=True, 
             bins=int(10), color = 'darkblue', 
             hist_kws={'edgecolor':'black'}, ax=ax[1],
             kde_kws={'linewidth': 4, 'shade': True})

ax[1].set_title('Nota das resenhas\n(Exceto não entregues)')
ax[1].text(90, 0.03, f"$\mu = ${df[df['Resenha Monetaristas']>0]['Resenha Monetaristas'].mean().round(1)/10}", fontsize=12)
ax[1].text(90, 0.027, f"$\sigma = ${round(df[df['Resenha Monetaristas']>0]['Resenha Monetaristas'].std())/10}", fontsize=12)
ax[1].set_ylabel('Densidade')

plt.tight_layout()
fig.savefig('./figs/monetaristas.png')

plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/monetaristas.png]]


*** Notas e presença

#+BEGIN_SRC python :results graphics file :file ./figs/monetaristas_presenca.png
tmp = df.copy()

tmp["Média presença"] = tmp[["2020-10-19", "2020-10-26"]].mean(axis=1)

resenha = "Monetaristas"

fig, ax = plt.subplots()

sns.regplot(x="Média presença", y=f"Resenha {resenha}", data=tmp, ax=ax, y_jitter=.05);

ax.set_title(f"Nota x Presença\nResenha {resenha} - Turma {Turma}")

fig.savefig('./figs/monetaristas_presenca.png')

plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/monetaristas_presenca.png]]

* Novos Clássicos

** Pendências                                                        :ignore:

- [ ] Computar notas Forms
- [ ] Preencher presenhas na tabela da Ana Rosa
** Notas                                                             :ignore:

#+NAME:NovosCla
#+BEGIN_SRC python :results table latex
print('\\begin{center}')
print(
    df[["Resenha Novos Clássicos"]].to_latex(
        caption=f"Notas das resenhas - {Resenhas[1]}",
        bold_rows=True,
        longtable=True,
        na_rep='-',
    ),end='')
print('\end{center}')
#+END_SRC

#+RESULTS: NovosCla
#+begin_export latex
\begin{center}
\begin{longtable}{lr}
\caption{Notas das resenhas - Novos Clássicos}\\
\toprule
{} &  Resenha Novos Clássicos \\
\textbf{RA    } &                          \\
\midrule
\endhead
\midrule
\multicolumn{2}{r}{{Continued on next page}} \\
\midrule
\endfoot

\bottomrule
\endlastfoot
\textbf{230645} &                      5.0 \\
\textbf{213549} &                      5.0 \\
\textbf{257748} &                      7.0 \\
\textbf{232568} &                      5.0 \\
\textbf{233566} &                      7.0 \\
\textbf{215626} &                      0.0 \\
\textbf{091108} &                      7.0 \\
\textbf{234311} &                      5.0 \\
\textbf{216397} &                      0.0 \\
\textbf{197474} &                      5.0 \\
\textbf{234982} &                      0.0 \\
\textbf{235042} &                      0.0 \\
\textbf{197724} &                      5.0 \\
\textbf{217350} &                      0.0 \\
\textbf{174154} &                      0.0 \\
\textbf{237534} &                      3.0 \\
\textbf{237856} &                      5.0 \\
\textbf{199967} &                      7.0 \\
\textbf{103034} &                      5.0 \\
\textbf{172577} &                      7.0 \\
\textbf{159866} &                      5.0 \\
\textbf{221896} &                     10.0 \\
\textbf{257876} &                     10.0 \\
\textbf{242087} &                        - \\
\textbf{242328} &                      7.0 \\
\textbf{147614} &                      0.0 \\
\textbf{176104} &                        - \\
\textbf{205149} &                      0.0 \\
\textbf{205151} &                      7.0 \\
\textbf{244207} &                      7.0 \\
\textbf{158425} &                      7.0 \\
\textbf{257932} &                      7.0 \\
\textbf{177964} &                      5.0 \\
\textbf{245099} &                      7.0 \\
\textbf{206806} &                      0.0 \\
\textbf{225851} &                      0.0 \\
\end{longtable}
\end{center}
#+end_export


** Gráficos :ignore:
*** Notas   
#+BEGIN_SRC python :results graphics file :file ./figs/novosclassicos.png
fig, ax = plt.subplots(1,2, figsize=(8,5), sharey=True)
sns.distplot(df['Resenha Novos Clássicos'], hist=True, kde=True, 
             bins=int(10), color = 'darkblue', 
             hist_kws={'edgecolor':'black'}, ax=ax[0],
             kde_kws={'linewidth': 4, 'shade': True})
mu = round(df["Resenha Novos Clássicos"].mean())

sigma = df["Resenha Novos Clássicos"].std().round(1)/10

ax[0].set_title(f'Nota das resenhas\nTurma {Turma}')
ax[0].text(10, 0.5, f'$\mu = ${mu}', fontsize=12)
ax[0].text(10, 0.47, f'$\sigma = ${sigma}', fontsize=12)


sns.distplot(df[df['Resenha Novos Clássicos']>0]['Resenha Novos Clássicos'], hist=True, kde=True, 
             bins=int(10), color = 'darkblue', 
             hist_kws={'edgecolor':'black'}, ax=ax[1],
             kde_kws={'linewidth': 4, 'shade': True})

ax[1].set_title('Nota das resenhas\n(Exceto não entregues)')
ax[1].text(10, 0.5, f"$\mu = ${df[df['Resenha Novos Clássicos']>0]['Resenha Novos Clássicos'].mean().round(1)}", fontsize=12)
ax[1].text(10, 0.47, f"$\sigma = ${round(df[df['Resenha Novos Clássicos']>0]['Resenha Novos Clássicos'].std())/10}", fontsize=12)
ax[1].set_ylabel('Densidade')

plt.tight_layout()
fig.savefig('./figs/novosclassicos.png')

plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/novosclassicos.png]]



*** Notas e Presença
#+BEGIN_SRC python :results graphics file :file ./figs/novosclassicos_presenca.png
tmp = df.copy()

tmp["Média presença"] = tmp[["2020-10-19", "2020-10-26", "2020-11-09"]].mean(axis=1)

resenha = "Novos Clássicos"

fig, ax = plt.subplots()

sns.regplot(x="Média presença", y=f"Resenha {resenha}", data=tmp, ax=ax, y_jitter=.05);

ax.set_title(f"Nota x Presença\nResenha {resenha} - Turma {Turma}")

fig.savefig('./figs/novosclassicos_presenca.png')

plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/novosclassicos_presenca.png]]



** Verificação de plágio por amostragem
*** Sorteio

#+BEGIN_SRC python :results output :exports both
pre_selecionados = ["216397", "235042"]
alunos = df.shape[0]
sample = 0.3
amostra = round(alunos*sample)
bad_df = df.index.isin(pre_selecionados)
elegivies = df.loc[~bad_df].query('`Resenha Novos Clássicos` > 0')["Resenha Novos Clássicos"].index.tolist()

resultado = np.sort(np.random.choice(
    a = elegivies,
    size = amostra,
    replace = False # Sem repetição
))
resultado = pd.DataFrame(resultado)
resultado.columns = ["RA Sorteados"]
resultado.index = [i + 1 for i in resultado.index]
print(resultado)
resultado
#+END_SRC

#+RESULTS:
#+begin_example
   RA Sorteados
1        158425
2        177964
3        199967
4        213549
5        221896
6        230645
7        232568
8        233566
9        237534
10       237856
11       257876
#+end_example



*** Resultado Turnitin <2020-11-14 sáb>

#+CAPTION: Resumo relatório de origilidadade
#+NAME:TurnitinNvC
|--------+--------------------|
|     RA | Grau de semelhança |
|--------+--------------------|
| 103034 |                11% |
| 199967 |                 1% |
| 205151 |                11% |
| 213549 |                 5% |
| 216397 |                 0% |
| 230645 |                 0% |
| 232568 |                 0% |
| 233566 |                 0% |
| 235042 |                25% |
| 237856 |                 1% |
| 242328 |                 7% |
| 245099 |                 2% |
| 257876 |                 3% |
|--------+--------------------|

**** Gráfico
#+BEGIN_SRC python :var turnitin=TurnitinNvC :results file graphics :file ./figs/turintin_NvC_fig.png
turnitin = pd.DataFrame(
    turnitin[1:],
    columns=["RA", "Grau de Semelhança"],
)
turnitin["Grau de Semelhança"] = [int(grau[:-1])/100 for grau in turnitin["Grau de Semelhança"]]
turnitin.set_index("RA", inplace=True)

fig, ax = plt.subplots(1,1, figsize=(8,5), sharey=True)
sns.distplot(turnitin, hist=True, kde=True, 
             bins=int(10), color = 'darkblue', 
             hist_kws={'edgecolor':'black'}, ax=ax,
             kde_kws={'linewidth': 4, 'shade': True})
mu = round(turnitin["Grau de Semelhança"].mean()*100)

sigma = turnitin["Grau de Semelhança"].std().round(1)*100

ax.set_title(f'Checagem de plágio\nTurma {Turma}')
ax.text(-0.1, 10, f'$\mu = ${mu}', fontsize=12)
ax.text(-0.1, 8, f'$\sigma = ${sigma}', fontsize=12)

sns.despine()
plt.savefig('./figs/turintin_NvC_fig.png')
plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/turintin_NvC_fig.png]]

**** Atualizando notas

#+BEGIN_SRC python
df.loc["235042","Resenha Novos Clássicos"] = 5.0
df.loc["216397","Resenha Novos Clássicos"] = 3.0
#+END_SRC

#+RESULTS:

** Questões

*** Importando respostas                                             :ignore:

#+BEGIN_SRC python
questoes = pd.read_csv(
    './Questoes/MonetaristasNovosClassicos.csv',
    index_col=[0]
)
questoes.columns = [
    "E-mail", "Total", "RA", "Nota RA (não utilizado)", "RA feedback (não utilizado)",
    "Q1", "Nota_1", "Feedback_1",
    "Q2", "Nota_2", "Feedback_2",
    "Justificativa", "Nota_3", "Feedback_3"
]

tmp_idx = pd.Index([i[:16] for i in questoes.index.tolist()])

questoes = questoes[["E-mail", "RA", "Q1", "Q2", "Justificativa"]]
questoes["Nota_1"] = [int(res=="Falso") for res in questoes["Q1"]]
questoes["Nota_2"] = [int(res=="Falso") for res in questoes["Q2"]]
#+END_SRC

#+RESULTS:


*** Importando pacotes e funções

#+BEGIN_SRC python :results graphics file :file ./figs/similarity_forms_1.png
#+END_SRC

#+RESULTS:
[[file:./figs/similarity_forms_1.png]]






* Novos Keynesianos

** Pendências                                                        :ignore:

- [X] Computar notas 
- [ ] Preencher presenhas na tabela da Ana Rosa 
- [ ] Sortear turnitin
** Notas                                                             :ignore:

#+NAME:NovosKey
#+BEGIN_SRC python :results table latex
print('\\begin{center}')
print(
    df[["Resenha Novos Keynesianos"]].to_latex(
        caption=f"Notas das resenhas - {Resenhas[2]}",
        bold_rows=True,
        longtable=True,
        na_rep='-',
    ),end='')
print('\end{center}')
#+END_SRC

#+RESULTS: NovosKey
#+begin_export latex
\begin{center}
\begin{longtable}{lr}
\caption{Notas das resenhas - Novos Keynesianos}\\
\toprule
{} &  Resenha Novos Keynesianos \\
\textbf{RA    } &                            \\
\midrule
\endhead
\midrule
\multicolumn{2}{r}{{Continued on next page}} \\
\midrule
\endfoot

\bottomrule
\endlastfoot
\textbf{230645} &                        5.0 \\
\textbf{213549} &                        0.0 \\
\textbf{257748} &                        5.0 \\
\textbf{232568} &                        0.0 \\
\textbf{233566} &                        0.0 \\
\textbf{215626} &                        0.0 \\
\textbf{091108} &                        5.0 \\
\textbf{234311} &                        5.0 \\
\textbf{216397} &                        0.0 \\
\textbf{197474} &                        0.0 \\
\textbf{234982} &                          - \\
\textbf{235042} &                        5.0 \\
\textbf{197724} &                        5.0 \\
\textbf{217350} &                          - \\
\textbf{174154} &                        0.0 \\
\textbf{237534} &                        0.0 \\
\textbf{237856} &                        0.0 \\
\textbf{199967} &                        7.0 \\
\textbf{103034} &                        0.0 \\
\textbf{172577} &                        0.0 \\
\textbf{159866} &                        0.0 \\
\textbf{221896} &                       10.0 \\
\textbf{257876} &                       10.0 \\
\textbf{242087} &                          - \\
\textbf{242328} &                        5.0 \\
\textbf{147614} &                        0.0 \\
\textbf{176104} &                          - \\
\textbf{205149} &                        0.0 \\
\textbf{205151} &                        0.0 \\
\textbf{244207} &                        0.0 \\
\textbf{158425} &                        5.0 \\
\textbf{257932} &                        0.0 \\
\textbf{177964} &                        0.0 \\
\textbf{245099} &                        0.0 \\
\textbf{206806} &                        0.0 \\
\textbf{225851} &                        0.0 \\
\end{longtable}
\end{center}
#+end_export



** Gráficos                                                          :ignore:
*** Notas   
#+BEGIN_SRC python :results graphics file :file ./figs/novoskeynesianos.png
fig, ax = plt.subplots(1,2, figsize=(8,5), sharey=True)
sns.distplot(df['Resenha Novos Keynesianos'], hist=True, kde=True, 
             bins=int(10), color = 'darkblue', 
             hist_kws={'edgecolor':'black'}, ax=ax[0],
             kde_kws={'linewidth': 4, 'shade': True})
mu = round(df["Resenha Novos Keynesianos"].mean())

sigma = df["Resenha Novos Keynesianos"].std().round(1)/10

ax[0].set_title(f'Nota das resenhas\nTurma {Turma}')
ax[0].text(10, 0.54, f'$\mu = ${mu}', fontsize=12)
ax[0].text(10, 0.47, f'$\sigma = ${sigma}', fontsize=12)


sns.distplot(df[df['Resenha Novos Keynesianos']>0]['Resenha Novos Keynesianos'], hist=True, kde=True, 
             bins=int(10), color = 'darkblue', 
             hist_kws={'edgecolor':'black'}, ax=ax[1],
             kde_kws={'linewidth': 4, 'shade': True})

ax[1].set_title('Nota das resenhas\n(Exceto não entregues)')
ax[1].text(10, 0.54, f"$\mu = ${df[df['Resenha Novos Keynesianos']>0]['Resenha Novos Keynesianos'].mean().round(1)}", fontsize=12)
ax[1].text(10, 0.47, f"$\sigma = ${round(df[df['Resenha Novos Keynesianos']>0]['Resenha Novos Keynesianos'].std())/10}", fontsize=12)
ax[1].set_ylabel('Densidade')

plt.tight_layout()
fig.savefig('./figs/novoskeynesianos.png')

plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/novoskeynesianos.png]]



*** Notas e Presença
#+BEGIN_SRC python :results graphics file :file ./figs/novoskeynesianos_presenca.png
tmp = df.copy()

tmp["Média presença"] = tmp[["2020-10-19", "2020-10-26", "2020-11-09"]].mean(axis=1)

resenha = "Novos Keynesianos"

fig, ax = plt.subplots()

sns.regplot(x="Média presença", y=f"Resenha {resenha}", data=tmp, ax=ax, y_jitter=.05);

ax.set_title(f"Nota x Presença\nResenha {resenha} - Turma {Turma}")

fig.savefig('./figs/novoskeynesianos_presenca.png')

plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/novoskeynesianos_presenca.png]]



** Verificação de plágio por amostragem
*** Sorteio
    
Como foram entregues aproximadamente 30% de resenhas, todos os alunos foram submetidos ao turnitin.

*** Resultado Turnitin

#+CAPTION: Resumo relatório de origilidadade
#+NAME:TurnitinNvK
|--------+--------------------|
|     RA | Grau de semelhança |
|--------+--------------------|
| 091108 |                 2% |
| 158425 |                 3% |
| 197724 |                 0% |
| 199667 |                 3% |
| 213549 |                 2% |
| 221896 |                26% |
| 230645 |                 0% |
| 234311 |                 0% |
| 235042 |                29% |
| 242328 |                 2% |
| 244207 |                52% |
| 257748 |                 0% |
| 257876 |                 7% |
| 244321 |                 1% |
|--------+--------------------|

**** Gráfico
#+BEGIN_SRC python :var turnitin=TurnitinNvK :results file graphics :file ./figs/turintin_NvK_fig.png
turnitin = pd.DataFrame(
    turnitin[1:],
    columns=["RA", "Grau de Semelhança"],
)
turnitin["Grau de Semelhança"] = [int(grau[:-1])/100 for grau in turnitin["Grau de Semelhança"]]
turnitin.set_index("RA", inplace=True)

fig, ax = plt.subplots(1,1, figsize=(8,5), sharey=True)
sns.distplot(turnitin, hist=True, kde=True, 
             bins=int(20), color = 'darkblue', 
             hist_kws={'edgecolor':'black'}, ax=ax,
             kde_kws={'linewidth': 4, 'shade': True})
mu = round(turnitin["Grau de Semelhança"].mean()*100)

sigma = turnitin["Grau de Semelhança"].std().round(1)*100

ax.set_title(f'Checagem de plágio\nTurma {Turma}')
ax.text(-0.15, 10, f'$\mu = ${mu}', fontsize=12)
ax.text(-0.15, 9.0, f'$\sigma = ${sigma}', fontsize=12)
ax.axvline(x=0.5, color='black', label="Corte para zerar")
ax.legend()
sns.despine()
plt.savefig('./figs/turintin_NvK_fig.png')
plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/turintin_NvK_fig.png]]



**** Atualização das notas

#+BEGIN_SRC python
df.loc["244207", "Resenha Novos Keynesianos"] = 0.0
#+END_SRC

#+RESULTS:

* Regime de Metas

** Pendências                                                        :ignore:

- [ ] Preencher presenhas na tabela da Ana Rosa
- [ ] Sortear turnitin
** Notas                                                             :ignore:

#+NAME:NCM
#+BEGIN_SRC python :results table latex 
print('\\begin{center}')
print(
    df[["Resenha Regime de Metas"]].to_latex(
        caption=f"Notas das resenhas - {Resenhas[3]}",
        bold_rows=True,
        longtable=True,
        na_rep='-',
    ),end='')
print('\end{center}')
#+END_SRC

#+RESULTS: NCM
#+begin_export latex
\begin{center}
\begin{longtable}{lr}
\caption{Notas das resenhas - Novo Consenso}\\
\toprule
{} &  Resenha Regime de Metas \\
\textbf{RA    } &                          \\
\midrule
\endhead
\midrule
\multicolumn{2}{r}{{Continued on next page}} \\
\midrule
\endfoot

\bottomrule
\endlastfoot
\textbf{230645} &                      0.0 \\
\textbf{213549} &                      0.0 \\
\textbf{257748} &                      7.0 \\
\textbf{232568} &                      7.0 \\
\textbf{233566} &                      0.0 \\
\textbf{215626} &                      0.0 \\
\textbf{091108} &                      7.0 \\
\textbf{234311} &                      7.0 \\
\textbf{216397} &                      7.0 \\
\textbf{197474} &                      0.0 \\
\textbf{234982} &                        - \\
\textbf{235042} &                      5.0 \\
\textbf{197724} &                      5.0 \\
\textbf{217350} &                        - \\
\textbf{174154} &                      0.0 \\
\textbf{237534} &                      0.0 \\
\textbf{237856} &                      7.0 \\
\textbf{199967} &                     10.0 \\
\textbf{103034} &                      0.0 \\
\textbf{172577} &                      0.0 \\
\textbf{159866} &                      7.0 \\
\textbf{221896} &                      0.0 \\
\textbf{257876} &                      0.0 \\
\textbf{242087} &                        - \\
\textbf{242328} &                      0.0 \\
\textbf{147614} &                      0.0 \\
\textbf{176104} &                        - \\
\textbf{205149} &                      0.0 \\
\textbf{205151} &                      0.0 \\
\textbf{244207} &                      7.0 \\
\textbf{158425} &                     10.0 \\
\textbf{257932} &                      7.0 \\
\textbf{177964} &                     10.0 \\
\textbf{245099} &                      7.0 \\
\textbf{206806} &                      3.0 \\
\textbf{225851} &                      0.0 \\
\end{longtable}
\end{center}
#+end_export


** Gráficos                                                          :ignore:
*** Notas
#+BEGIN_SRC python :results graphics file :file ./figs/ncm.png 
fig, ax = plt.subplots(1,2, figsize=(8,5), sharey=True)
sns.distplot(df['Resenha Regime de Metas'], hist=True, kde=True,
             bins=int(10), color = 'darkblue',
             hist_kws={'edgecolor':'black'}, ax=ax[0],
             kde_kws={'linewidth': 4, 'shade': True})
mu = round(df["Resenha Regime de Metas"].mean())

sigma = df["Resenha Regime de Metas"].std().round(1)/10

ax[0].set_title(f'Nota das resenhas\nTurma {Turma}')
ax[0].text(10, 0.5, f'$\mu = ${mu}', fontsize=12)
ax[0].text(10, 0.46, f'$\sigma = ${sigma}', fontsize=12)


sns.distplot(df[df['Resenha Regime de Metas']>0]['Resenha Regime de Metas'], hist=True, kde=True,
             bins=int(10), color = 'darkblue',
             hist_kws={'edgecolor':'black'}, ax=ax[1],
             kde_kws={'linewidth': 4, 'shade': True})

ax[1].set_title('Nota das resenhas\n(Exceto não entregues)')
ax[1].text(10, 0.5, f"$\mu = ${df[df['Resenha Regime de Metas']>0]['Resenha Regime de Metas'].mean().round(1)}", fontsize=12)
ax[1].text(10, 0.466, f"$\sigma = ${round(df[df['Resenha Regime de Metas']>0]['Resenha Regime de Metas'].std())/10}", fontsize=12)
ax[1].set_ylabel('Densidade')

plt.tight_layout()
fig.savefig('./figs/ncm.png')

plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/ncm.png]]

#+RESULTS:6[[file:./figs/ncm.png]]6


*** Notas e Presença
#+BEGIN_SRC python :results graphics file :file ./figs/ncm_presenca.png 
tmp = df.copy()

tmp["Média presença"] = tmp[
    ["2020-10-19", "2020-10-26", "2020-11-09", "2020-11-23", "2020-11-30"]
].mean(axis=1)

resenha = "Regime de Metas"

fig, ax = plt.subplots()

sns.regplot(x="Média presença", y=f"Resenha {resenha}", data=tmp, ax=ax, y_jitter=0.05)

ax.set_title(f"Nota x Presença\nResenha {resenha} - Turma {Turma}")

fig.savefig("./figs/ncm_presenca.png")

plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/ncm_presenca.png]]




** Verificação de plágio por amostragem
*** Sorteio

#+BEGIN_SRC python :results table latex :exports both 
pre_selecionados = ["216397", "206806"]
alunos = df.shape[0]
sample = 0.3
amostra = round(alunos * sample) - len(pre_selecionados)
bad_df = df.index.isin(pre_selecionados)
elegivies = (
    df.loc[~bad_df]
    .query("`Resenha Regime de Metas` > 0")["Resenha Regime de Metas"]
    .index.tolist()
)

resultado = np.random.choice(
    a=elegivies, size=amostra, replace=False
).tolist()  # Sem repetição
resultado = pre_selecionados + resultado
resultado = np.sort(resultado)
resultado = pd.DataFrame(resultado)
resultado.columns = ["RA Sorteados"]
resultado.index = [i + 1 for i in resultado.index]
print(resultado.to_latex())
resultado
#+END_SRC

#+RESULTS:
#+begin_export latex
\begin{tabular}{ll}
\toprule
{} & RA Sorteados \\
\midrule
1  &       091108 \\
2  &       159866 \\
3  &       177964 \\
4  &       199967 \\
5  &       206806 \\
6  &       216397 \\
7  &       234311 \\
8  &       235042 \\
9  &       245099 \\
10 &       257748 \\
11 &       257932 \\
\bottomrule
\end{tabular}
#+end_export


*** Resultado Turnitin

#+CAPTION: Resumo relatório de origilidadade
#+NAME:TurnitinNCM
|--------+--------------------|
|     RA | Grau de semelhança |
|--------+--------------------|
| 158425 |                31% |
| 159866 |                11% |
| 199967 |                17% |
| 206806 |                40% |
| 216397 |                19% |
| 234311 |                 0% |
| 244207 |                55% |
| 245099 |                 1% |
| 257748 |                15% |
| 257932 |                15% |
|--------+--------------------|
**** Gráfico
#+BEGIN_SRC python :var turnitin=TurnitinNCM :results file graphics :file ./figs/turintin_NCM_fig.png 
turnitin = pd.DataFrame(
    turnitin[1:],
    columns=["RA", "Grau de Semelhança"],
)
turnitin["Grau de Semelhança"] = [
    int(grau[:-1]) / 100 for grau in turnitin["Grau de Semelhança"]
]
turnitin.set_index("RA", inplace=True)

fig, ax = plt.subplots(1, 1, figsize=(8, 5), sharey=True)
sns.distplot(
    turnitin,
    hist=True,
    kde=True,
    bins=int(10),
    color="darkblue",
    hist_kws={"edgecolor": "black"},
    ax=ax,
    kde_kws={"linewidth": 4, "shade": True},
)
mu = round(turnitin["Grau de Semelhança"].mean() * 100)

sigma = turnitin["Grau de Semelhança"].std().round(1) * 100

ax.set_title(f"Checagem de plágio\nTurma {Turma}")
ax.text(-0.1, 10, f"$\mu = ${mu}", fontsize=12)
ax.text(-0.1, 9.0, f"$\sigma = ${sigma}", fontsize=12)
ax.axvline(x=0.5, color="black", ls="-", label="Corte para zerar")
ax.legend()
sns.despine()
plt.savefig("./figs/turintin_NCM_fig.png")
plt.close()
#+END_SRC

#+RESULTS:
[[file:./figs/turintin_NCM_fig.png]]

**** Atualização das notas

#+BEGIN_SRC python
df.loc["244207", "Resenha Regime de Metas"] = 0
#+END_SRC

#+RESULTS:

* Lista de presença e notas
** Lista de chamada com nota das resenhas                            :ignore:
#+NAME:Lista
#+BEGIN_SRC python :results table latex
print(
    df.to_latex(
        caption="Lista de presença e de notas",
        bold_rows=True,
        longtable=True,
        na_rep='-',
        label="lista"
), end='')
print('\end{landscape}\end{center}')
#+END_SRC

#+RESULTS: Lista
#+begin_export latex
\begin{longtable}{llrrrrrrrrrrrl}
\caption{Lista de presença e de notas}\label{lista}\\
\toprule
{} &                                   Nome &  Resenha Monetaristas &  2020-10-19 &  2020-10-26 &  2020-11-09 &  Resenha Novos Clássicos &  2020-11-16 &  2020-11-23 &  Resenha Novos Keynesianos &  2020-11-30 &  Resenha Regime de Metas &  2020-12-14 &                   Email \\
\textbf{RA    } &                                        &                       &             &             &             &                          &             &             &                            &             &                          &             &                         \\
\midrule
\endhead
\midrule
\multicolumn{14}{r}{{Continued on next page}} \\
\midrule
\endfoot

\bottomrule
\endlastfoot
\textbf{230645} &                    alice pereira dario &                  50.0 &       17.86 &        0.00 &       19.47 &                      5.0 &       57.50 &        0.00 &                        5.0 &        4.76 &                      0.0 &       21.62 &  a230645@dac.unicamp.br \\
\textbf{213549} &           beatriz helena toledo pastre &                  30.0 &        0.00 &        0.00 &        6.19 &                      5.0 &           - &        5.88 &                        0.0 &       80.95 &                      0.0 &        0.00 &  b213549@dac.unicamp.br \\
\textbf{257748} &             breno rivelino fima castro &                  50.0 &        7.14 &        5.31 &       93.81 &                      7.0 &       28.33 &       70.59 &                        5.0 &       80.00 &                      7.0 &        0.00 &  b257748@dac.unicamp.br \\
\textbf{232568} &                 caio cimino de almeida &                  70.0 &           - &        2.65 &       54.87 &                      5.0 &       70.00 &        0.00 &                        0.0 &       48.57 &                      7.0 &      100.00 &  c232568@dac.unicamp.br \\
\textbf{233566} &                 diego tabacof labriola &                  30.0 &        0.00 &        0.00 &       91.15 &                      7.0 &           - &           - &                        0.0 &           - &                      0.0 &        0.00 &  d233566@dac.unicamp.br \\
\textbf{215626} &                felipe barbosa de souza &                   0.0 &        0.00 &        0.00 &        0.00 &                      0.0 &       18.33 &       11.76 &                        0.0 &       13.33 &                      0.0 &        0.00 &  f215626@dac.unicamp.br \\
\textbf{091108} &                 felipe eboli sotorilli &                  50.0 &        1.79 &        0.00 &       77.88 &                      7.0 &       29.17 &       76.47 &                        5.0 &       11.43 &                      7.0 &        0.00 &  f091108@dac.unicamp.br \\
\textbf{234311} &                  felipe rubbo aguilera &                  50.0 &       33.93 &        1.77 &       92.92 &                      5.0 &           - &       76.47 &                        5.0 &       42.86 &                      7.0 &        0.00 &  f234311@dac.unicamp.br \\
\textbf{216397} &                        gabriel pereira &                  30.0 &        0.00 &        0.88 &       76.11 &                      3.0 &        0.83 &        0.00 &                        0.0 &       28.57 &                      7.0 &        0.00 &  g216397@dac.unicamp.br \\
\textbf{197474} &                gabriel pereira jovetta &                  50.0 &        0.00 &        4.42 &       51.33 &                      5.0 &       46.67 &       47.06 &                        0.0 &        0.00 &                      0.0 &      100.00 &  g197474@dac.unicamp.br \\
\textbf{234982} &                 gabriel pereira santos &                   0.0 &           - &       13.27 &        0.00 &                      0.0 &           - &           - &                          - &           - &                        - &        0.00 &  g234982@dac.unicamp.br \\
\textbf{235042} &                gabriel silva gonçalves &                   0.0 &        0.00 &        0.00 &        0.00 &                      5.0 &           - &       17.65 &                        5.0 &       82.86 &                      5.0 &        0.00 &  g235042@dac.unicamp.br \\
\textbf{197724} &           gabriela santana das virgens &                  50.0 &        0.00 &        0.88 &       74.34 &                      5.0 &       30.00 &       82.35 &                        5.0 &       82.86 &                      5.0 &        0.00 &  g197724@dac.unicamp.br \\
\textbf{217350} &       guilherme yoshio agata domingues &                  30.0 &           - &           - &           - &                      0.0 &           - &           - &                          - &           - &                        - &           - &  g217350@dac.unicamp.br \\
\textbf{174154} &               gustavo josé lara campos &                  30.0 &        0.00 &        4.42 &       16.81 &                      0.0 &           - &           - &                        0.0 &           - &                      0.0 &        0.00 &  g174154@dac.unicamp.br \\
\textbf{237534} &         joao mateus rodrigues da silva &                  30.0 &           - &           - &           - &                      3.0 &           - &           - &                        0.0 &       11.43 &                      0.0 &           - &  j237534@dac.unicamp.br \\
\textbf{237856} &        joão vitor dos santos rodrigues &                  50.0 &        1.79 &        0.00 &       91.15 &                      5.0 &       90.83 &        0.00 &                        0.0 &        0.00 &                      7.0 &        0.00 &  j237856@dac.unicamp.br \\
\textbf{199967} &                   jonas pereira cintra &                  70.0 &        0.00 &        3.54 &       82.30 &                      7.0 &       50.83 &        0.00 &                        7.0 &       82.86 &                     10.0 &       59.46 &  j199967@dac.unicamp.br \\
\textbf{103034} &  leonardo augusto de oliveira piovesan &                  50.0 &        0.00 &        0.00 &       93.81 &                      5.0 &       93.33 &       70.59 &                        0.0 &       89.52 &                      0.0 &        0.00 &  l103034@dac.unicamp.br \\
\textbf{172577} &                   lucas azevedo soares &                  50.0 &        2.68 &        5.31 &       14.16 &                      7.0 &       75.00 &       76.47 &                        0.0 &       87.62 &                      0.0 &        0.00 &  l172577@dac.unicamp.br \\
\textbf{159866} &              marcela chenfel dos anjos &                  50.0 &        0.89 &        0.00 &       91.15 &                      5.0 &       50.83 &       76.47 &                        0.0 &       33.33 &                      7.0 &        0.00 &  m159866@dac.unicamp.br \\
\textbf{221896} &               mariana sayuri silva doi &                  70.0 &       34.82 &        0.88 &       18.58 &                     10.0 &       37.50 &        0.00 &                       10.0 &        0.00 &                      0.0 &        0.00 &  m221896@dac.unicamp.br \\
\textbf{257876} &    maryana beatriz ventura de carvalho &                 100.0 &       67.86 &        0.88 &       93.81 &                     10.0 &       83.33 &       70.59 &                       10.0 &       81.90 &                      0.0 &        0.00 &  m257876@dac.unicamp.br \\
\textbf{242087} &                          miguel razera &                   0.0 &        0.89 &        1.77 &        0.00 &                        - &           - &           - &                          - &           - &                        - &        0.00 &  m242087@dac.unicamp.br \\
\textbf{242328} &    natalia kimberlle tavares imperiano &                  50.0 &           - &           - &        0.88 &                      7.0 &           - &           - &                        5.0 &           - &                      0.0 &        0.00 &  n242328@dac.unicamp.br \\
\textbf{147614} &          pedro augusto de almeida rosa &                   0.0 &        0.00 &        0.00 &        0.00 &                      0.0 &       93.33 &       76.47 &                        0.0 &        0.00 &                      0.0 &        0.00 &  p147614@dac.unicamp.br \\
\textbf{176104} &              rafael da silva tomasella &                   0.0 &           - &           - &           - &                        - &           - &           - &                          - &           - &                        - &           - &  r176104@dac.unicamp.br \\
\textbf{205149} &                 raphaela freitas souza &                 100.0 &           - &           - &           - &                      0.0 &           - &           - &                        0.0 &           - &                      0.0 &           - &  r205149@dac.unicamp.br \\
\textbf{205151} &               raphaela prado francisco &                   0.0 &        0.89 &       47.79 &        4.42 &                      7.0 &           - &       76.47 &                        0.0 &       63.81 &                      0.0 &        0.00 &  r205151@dac.unicamp.br \\
\textbf{244207} &                 sanny alves dos santos &                  70.0 &        0.89 &        0.00 &        0.00 &                      7.0 &           - &       64.71 &                        0.0 &       85.71 &                      0.0 &        0.00 &  s244207@dac.unicamp.br \\
\textbf{158425} &                           tales alonso &                  50.0 &        0.89 &       61.95 &       61.06 &                      7.0 &       29.17 &       70.59 &                        5.0 &       19.05 &                     10.0 &        0.00 &  t158425@dac.unicamp.br \\
\textbf{257932} &              thaís monello de oliveira &                 100.0 &        0.89 &        0.00 &       30.09 &                      7.0 &       24.17 &       64.71 &                        0.0 &       86.67 &                      7.0 &        0.00 &  t257932@dac.unicamp.br \\
\textbf{177964} &               victor hugo alves duarte &                  70.0 &        0.00 &        0.00 &        0.00 &                      5.0 &           - &           - &                        0.0 &           - &                     10.0 &        0.00 &  v177964@dac.unicamp.br \\
\textbf{245099} &                            victor maia &                  50.0 &       16.07 &       53.98 &       70.80 &                      7.0 &       25.00 &        0.00 &                        0.0 &       43.81 &                      7.0 &        0.00 &  v245099@dac.unicamp.br \\
\textbf{206806} &            vinicius jeronimo capodalio &                  50.0 &        0.00 &        7.08 &        2.65 &                      0.0 &       29.17 &        0.00 &                        0.0 &       80.00 &                      3.0 &       83.78 &  v206806@dac.unicamp.br \\
\textbf{225851} &                william de sousa rabelo &                  50.0 &           - &           - &           - &                      0.0 &           - &      100.00 &                        0.0 &        0.00 &                      0.0 &       13.51 &  w225851@dac.unicamp.br \\
\end{longtable}
\end{landscape}\end{center}
#+end_export


* Exportando notas :noexport:

#+BEGIN_SRC python
df.to_csv(f'./output/CE342_{Turma}.csv')
df.to_excel(f'./output/CE342_{Turma}.xlsx')
#+END_SRC

#+RESULTS:

