#+OPTIONS: H:2 toc:t
#+Title: Panorama Macroecon√¥mico e a rela√ß√£o com a Infla√ß√£o
#+Author: PEDs: Gabriel Petrini e Mar√≠lia Cubero
#+Email: gpetrinidasilveira@gmail.com
#+DATE: 04 de Janeiro de 2021
#+LANGUAGE: pt_Br
#+ATTR_ORG: :width 100
* Beamer specific settings                                  :ignore:noexport:
#+LATEX_HEADER: \usepackage{csquotes, caption}
#+LATEX_HEADER: \usepackage[brazilian]{babel}
#+beamer_frame_level: 2
#+startup: beamer
#+LATEX_HEADER: \usepackage[style=abnt,noslsn,extrayear,uniquename=init,giveninits,justify,sccite, scbib,repeattitles,doi=false,isbn=false,url=false,maxcitenames=2, natbib=true,backend=biber]{biblatex}
#+LATEX_HEADER: \addbibresource{refs.bib}
#+LATEX_HEADER: \addbibresource{/HDD/Org/all_my_refs.bib}
#+latex_header: \AtBeginSection[]{\begin{frame}<beamer>\frametitle{T√≥picos}\tableofcontents[currentsection]\end{frame}}

The first line enables the Beamer specific commands for org-mode (more on this below); the next two tell the LaTeX exporter to use the Beamer class and to use the larger font settings

The following line specifies how org headlines translate to the Beamer document structure. 

* Python Configura√ß√µes :noexport:

#+PROPERTY: header-args:python :session *panorama* :results output drawer replace :exports none :eval never-export      

#+BEGIN_SRC python
import datetime
import pandas as pd
import seaborn as sns 
import matplotlib.pyplot as plt
import numpy as np
import matplotlib
import networkx as nx
import statsmodels.api as sm
sns.set_context('talk')
plt.style.use('bmh')


def consulta_bc(codigo_bcb, nome = ["Nome da s√©rie"]):
  url = 'http://api.bcb.gov.br/dados/serie/bcdata.sgs.{}/dados?formato=json'.format(codigo_bcb)
  df = pd.read_json(url)
  df['data'] = pd.to_datetime(df['data'], dayfirst=True)
  df.set_index('data', inplace=True)
  df.index.name = ''
  df.columns = nome
  return df

#+END_SRC

#+RESULTS:
:results:
:end:




* Introdu√ß√£o

** Estrutura das aulas

A aula ter√° a seguinte estrutura
- *Te√≥rico:* Conjuntura pr√©-Regime de Metas e revis√£o te√≥rica
  + Diagrama anal√≠tico
  + Estrutura das atas do COPOM
  + Exemplificando com uma ata
- *Macroecon√¥mico:* Apresenta√ß√£o dos dados e dos movimentos gerais
  + Parte I: 2002-2011
  + Parte II: 2011-2020


* Pre√¢mbulo: Cen√°rio internacional adverso, Implementa√ß√£o do RMI e a heran√ßa maldita

** A Heran√ßa Maldita cite:belluzzoDepoisQuedaEconomia2002

- Desmonte ossatura Estado Desenvolvimentista
- Crise Russa, Mexicana, Argentina $\Rightarrow$ /flight to quality/
- Instabilidade macroecon√¥mica $\Rightarrow$ /stop and go/
- $\Uparrow$ D√≠vida/PIB
- Choque inflacion√°rio $\Rightarrow$ C√¢mbio e energia

*Heran√ßa Maldita:*

- Instabilidade macroecon√¥mica $\Leftrightarrow \Uparrow r, \Downarrow e$ 
- Desemprego elevado
- Crises banc√°rias e do Balan√ßo de Pagamentos

*** 1999: Implementa√ß√£o do RMI

* RMI: Esquema anal√≠tico

** Diagrama
#+BEGIN_SRC python
fig, ax = plt.subplots(figsize=(19.2, 10.8))

G = nx.DiGraph()
G.add_edges_from(
    [
        ("$h_{t-n}$", "$h_{t}$"),
        ("$r_{t-m}$", "$h_{t}$"),
        ("$\\varepsilon^{D}$", "$h_{t}$"),  # IS
        ("$\pi_{t-n}$", "$\pi_{t}$"),
        ("$\pi^{e}_{t+n}$", "$\pi_{t}$"),
        ("$h_{t-n}$", "$\pi_{t}$"),
        ("$\Delta p^{F}$", "$\pi_{t}$"),
        ("$\Delta e$", "$\pi_{t}$"),
        ("$\\varepsilon^{S}$", "$\pi_{t}$"),  # Phillips
        ("$\Delta i^{F}_{t}$", "$\Delta e$"),
        ("$\Delta x_{t}$", "$\Delta e$"),
        ("$\Delta i_{t}$", "$\Delta e$"),
        ("$\\varepsilon^{F}_{t}$", "$\Delta e$"),  # C√¢mbio
        ("$i_{t-n}$", "$i_{t}$"),
        ("$\pi_{t} - \pi^{\star}$", "$i_{t}$"),
        ("$h_{t}$", "$i_{t}$"),  # Regra PM
        ("$\pi_{t}$", "$r_{t}$"),
        ("$r_{t-m}$", "$r_{t}$"),
        ("$i_{t}$", "$r_{t}$"),  # Juros real
        ("$r_{t}$", "$h_{t}$"),
        ("$\pi_{t}$", "$\pi_{t} - \pi^{\star}$"),
        ("$i_{t}$", "$\Delta i_{t}$")
    ]
)


# Specify the edges you want here
red_edges = []
edge_colours = ["black" if not edge in red_edges else "red" for edge in G.edges()]
black_edges = [edge for edge in G.edges() if edge not in red_edges]

highlights = ["$h_{t}$", "$\pi_{t}$", "$\Delta e$", "$i_{t}$"]
red_nodes = [node for node in G.nodes() if node in highlights]
white_nodes = [node for node in G.nodes() if node not in highlights]


# Need to create a layout when doing
# separate calls to draw nodes and edges
pos = nx.shell_layout(
    G,
)
nx.draw_networkx_nodes(
    G,
    pos,
    node_size=3200,
    ax=ax,
    node_color="white",
    edgecolors="black",
    nodelist=white_nodes,
)
nx.draw_networkx_nodes(
    G,
    pos,
    node_size=3200,
    ax=ax,
    node_color="red",
    edgecolors="black",
    nodelist=red_nodes,
)
nx.draw_networkx_labels(G, pos, font_size=20)
nx.draw_networkx_edges(
    G,
    pos,
    edgelist=red_edges,
    edge_color="darkred",
    arrows=True,
    arrowsize=30,
    min_target_margin=25,
    width=3.0,
)
nx.draw_networkx_edges(
    G,
    pos,
    edgelist=black_edges,
    arrows=True,
    arrowsize=30,
    min_target_margin=25,
)


sns.despine(left=True, bottom=True)
fig.savefig(
    "./figs/RMI.png", transparent=True, dpi=600, bbox_inches="tight", pad_inches=0
)
#+END_SRC

#+RESULTS:
:results:

(python3:38957): Gtk-[1;33mWARNING[0m **: [34m17:58:18.110[0m: Theme parsing error: gtk.css:1:117: Failed to import: Erro ao abrir arquivo /home/gpetrini/.local/share/gnome-shell/extensions/unite@hardpixel.eu/styles/buttons-right-always.css: Arquivo ou diret√≥rio n√£o encontrado
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Representa√ß√£o do Modelo do regime de Metas para infla√ß√£o} 
\includegraphics[width = 0.9\textwidth]{./figs/RMI.png}
\label{fig:ibcbr}
\caption*{\textbf{Fonte:} Elabora√ß√£o pr√≥pria}
\end{figure}
#+end_export
** Estrutura das Atas do Copom
- Evolu√ß√£o recente da economia $\Rightarrow$ $h_{t-m}, h_{t}, (\pi_{t} - \pi^{\star}), \varepsilon^{D}, \varepsilon^{S}$ 
- Avalia√ß√£o prospectiva das tend√™ncias de infla√ß√£o $\Rightarrow$ $\pi^{e}$
- Implementa√ß√£o da pol√≠tica monet√°ria $\Rightarrow$ $i_{t}, (\pi_{t} - \pi^{\star}), \pi^{e}_{t+n}$
- Infla√ß√£o $\Rightarrow$ Componentes de $\pi$
- Atividade econ√¥mica $\Rightarrow$ cr√©dito, produ√ß√£o, NUCI, etc
- Expectativas e sondagens $\Rightarrow$ $\pi^{e}$
- Mercado de trabalho $\Rightarrow$ redimentos, taxa de desemprego
- Cr√©dito e inadimpl√™ncia 
- Ambiente externo $\Rightarrow$ $\Delta e, \Delta p^{F}, \Delta i^{F}, \Delta x, \varepsilon^{F}$
- Com√©rcio exterior e reservas internacionais
  + Componentes do BP, fluxo de capitais e etc
- Mercado monet√°rio e opera√ß√µes de mercado aberto
  + *Memo:* Quantidade de moeda end√≥gena
  + $i_{t}$, spread banc√°rio, oferta de t√≠tulos p√∫blicos (LTN, LFT, etc)

** Exemplo: [[https://www.bcb.gov.br/publicacoes/atascopom/28102020][Ata N¬∫234]]

- *Setor externo:* $\Downarrow$ retomada de alguns setores ($\varepsilon^{F}$)
- Modera√ß√£o da volatilidade dos ativos financeiros $\Rightarrow$ favorece economias emergentes
- *Mercado dom√©stico:* Recupera√ß√£o desigual
  + $\Uparrow$ incerteza sobre a retomada $\Leftrightarrow \Downarrow Y_{\text{Emerg.}}$
- $\Uparrow$ proje√ß√£o da infla√ß√£o ($\pi^{e}$)
  + $\Uparrow p_{\text{Alimentos}}, p_{\text{Bens ind.}} \Leftrightarrow$ deprecia√ß√£o do Real e das /commodities/ ($\Delta e, \Delta p^{F}$)
  + Perspectiva de normaliza√ß√£o de pre√ßos com aumento extraordin√°rio $\Rightarrow \Downarrow$ produ√ß√£o e $\Uparrow$ demanda ($\varepsilon^{S}, \varepsilon^{D}$)
- Ociosidade no setor de servi√ßos ($h_{t}_{\text{Serv}}$)
- $Y_{\text{Emerg.}}$ e adiamento de reformas $\Rightarrow$ $\Uparrow$ pr√™mio de risco ($\Delta x$)
- $\Downarrow \Downarrow$ taxas de juros $\Rightarrow$ instabilidade $p_{\text{ativos}}$
  + Proximidade √† ZLB ($i_{t} \to 0$)
- Proje√ß√µes de infla√ß√£o abaixo da meta ($\pi_{t} < \pi^{\star}$)
  + Expectativas de longo prazo ancoradas ($\pi^{e} \to \pi^{\star}$)

** Exemplo: [[https://www.bcb.gov.br/publicacoes/atascopom/28102020][Ata N¬∫234 03/Nov/2020]]
#+BEGIN_SRC python
fig, ax = plt.subplots(figsize=(19.2, 10.8))

G = nx.DiGraph()
G.add_edges_from(
    [
        ("$h_{t-n}$", "$h_{t}$"),
        ("$r_{t-m}$", "$h_{t}$"),
        ("$\\varepsilon^{D}$", "$h_{t}$"),  # IS
        ("$\pi_{t-n}$", "$\pi_{t}$"),
        ("$\pi^{e}_{t+n}$", "$\pi_{t}$"),
        ("$h_{t-n}$", "$\pi_{t}$"),
        ("$\Delta p^{F}$", "$\pi_{t}$"),
        ("$\Delta e$", "$\pi_{t}$"),
        ("$\\varepsilon^{S}$", "$\pi_{t}$"),  # Phillips
        ("$\Delta i^{F}_{t}$", "$\Delta e$"),
        ("$\Delta x_{t}$", "$\Delta e$"),
        ("$\Delta i_{t}$", "$\Delta e$"),
        ("$\\varepsilon^{F}_{t}$", "$\Delta e$"),  # C√¢mbio
        ("$i_{t-n}$", "$i_{t}$"),
        ("$\pi_{t} - \pi^{\star}$", "$i_{t}$"),
        ("$h_{t}$", "$i_{t}$"),  # Regra PM
        ("$\pi_{t}$", "$r_{t}$"),
        ("$r_{t-m}$", "$r_{t}$"),
        ("$i_{t}$", "$r_{t}$"),  # Juros real
        ("$r_{t}$", "$h_{t}$"),
        ("$\pi_{t}$", "$\pi_{t} - \pi^{\star}$"),
        ("$i_{t}$", "$\Delta i_{t}$"),
    ]
)


# Specify the edges you want here
red_edges = []
edge_colours = ["black" if not edge in red_edges else "red" for edge in G.edges()]
black_edges = [edge for edge in G.edges() if edge not in red_edges]

highlights = [
    "$h_{t}$",
    "$\pi_{t} - \pi^{\star}$",
    "$\Delta e$",
    "$i_{t-n}$",
    "$\Delta x_{t}$",
    "$\Delta p^{F}$",
    "$\\varepsilon^{F}_{t}$",
    "$\\varepsilon^{S}$",
    "$\\varepsilon^{D}$",
    "$\pi^{e}_{t+n}$"
]
red_nodes = [node for node in G.nodes() if node in highlights]
white_nodes = [node for node in G.nodes() if node not in highlights]


# Need to create a layout when doing
# separate calls to draw nodes and edges
pos = nx.shell_layout(
    G,
)
nx.draw_networkx_nodes(
    G,
    pos,
    node_size=3200,
    ax=ax,
    node_color="white",
    edgecolors="black",
    nodelist=white_nodes,
)
nx.draw_networkx_nodes(
    G,
    pos,
    node_size=3200,
    ax=ax,
    node_color="yellow",
    edgecolors="black",
    nodelist=red_nodes,
)
nx.draw_networkx_labels(G, pos, font_size=20)
nx.draw_networkx_edges(
    G,
    pos,
    edgelist=red_edges,
    edge_color="darkred",
    arrows=True,
    arrowsize=30,
    min_target_margin=25,
    width=3.0,
)
nx.draw_networkx_edges(
    G,
    pos,
    edgelist=black_edges,
    arrows=True,
    arrowsize=30,
    min_target_margin=25,
)


sns.despine(left=True, bottom=True)
fig.savefig(
    "./figs/RMI_234.png", transparent=True, dpi=600, bbox_inches="tight", pad_inches=0
)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Representa√ß√£o de An√°lise de uma ata do COPOM}
\includegraphics[width = 0.9\textwidth]{./figs/RMI_234.png}
\label{fig:ata234}
\caption*{\textbf{Fonte:} Elabora√ß√£o pr√≥pria}
\end{figure}
#+end_export
* Governos Lula e suas fases

** Crescimento e desequil√≠brios globais cite:carneiroSupremaciaDosMercados2006

Ap√≥s fase conturbada de 1997/2002, a economia global consolida um arrajno din√¢mico e desequiblibrado entre 2002/3 a 2007/8

*Engrenagem comercial com 3 elos*
  - Crescimento finance-led nos EUA
    - D√©ficit comercial elevado
  - Estrat√©gia trade-account nos pa√≠ses asi√°ticos
    - Super√°vit comercial chin√™s com os EUA
  - Impactos nas commodities

** Primeira Fase (2002-2006)


Experimento desenvolvimentista junto de uma pol√≠tica macroecon√¥mica conservadora:
- Continuidade do trip√©
- Vis√£o te√≥rica da *pol√≠tica fiscal:* contra√ß√£o fiscal expansionista
- *Estrat√©gia de crescimento:* vis√£o liberal predominante
  - reformas microecon√¥micas
  - regras est√°veis de gest√£o
  - ampliar ajuste fiscal
- Aprecia√ß√£o cambial
- Taxa de juros elevadas

*Contexto de transi√ß√£o complexa:* desconfian√ßa dos credores e press√µes financeiras

** Segunda fase (2006-2010)

- Retomada do Estado como elemento condutor do Crescimento
- Desenho da pol√≠tica fiscal no centro de proposta do desenvolvimento
- Remontagem da capacidade de atua√ß√£o dos atores p√∫blicos
- N√£o desmonta aparato regulat√≥rio do modelo anterior
- Investimento de apoio √†s atividades privadas

** Continuidades

*** Pol√≠tica cambial

Pouco mudou ao longo do tempo

- Valoriza√ß√£o com reflexo na infla√ß√£o
- Compras de divisas n√£o evitou valoriza√ß√£o
- Impacto sobre o setor industrial

*** Pol√≠tica monet√°ria

R√≠gido regime de metas de infla√ß√£o

- altos n√≠veis de juros reais
- discuss√£o sobre independ√™ncia do Banco Central
- conflito com meta de taxa de juros "desenvolvimentista"

*** Pol√≠tica fiscal

N√£o foi alterado o regime fiscal definido na era FHC

- Lei de Responsabilidade Fiscal sem mudan√ßas
- N√£o alterou mercado de d√≠vida p√∫blica

** Descontinuidades

Conjuga√ß√£o de pol√≠ticas de incentivo √† renda e ao mercado interno

- Defesa da expans√£o da demanda como fator de impulso ao crescimento
  - Pol√≠tica deliberada de inser√ß√£o social
  - Expans√£o do cr√©dito
  - *Programa de Sal√°rio M√≠nimo*
- A√ß√µes desenvolvimentistas
  - Pol√≠ticas de incentivo ao investimento: PAC e PDP
  - Gasto p√∫blico como estrat√©gia para elevar o crescimento
  - Pol√≠tica de fortalecimento dos Bancos P√∫blicos e das empresas estatais

** Alguns resultados
- Queda da taxa de desemprego aberta
- Valoriza√ß√£o real do sal√°rio m√≠nimo
- Expans√£o do gasto federal total
- Taxa crescimento da FBCF cresce p√≥s-07
- Aumento do consumo das fam√≠lias, mas menor que o investimento

** Fatores determinantes

- Impulsos externos favor√°veis
  - Melhora no setor externo pelo lado comercial (commodities) e financiero
    - Ajudam retomada em 2004, mas n√£o puxam o crescimento
- Motores do crescimento (expans√£o do mercado interno)
  - Distribui√ß√£o de renda e c≈ïedito
    - Aumento do saldo total de cr√©dito
  - Investimento induzido
- Investimento p√∫blico a partir de 2007 com o PAC

* Dados 2002-2011

** PIB puxado pelo mercado dom√©stico

#+BEGIN_SRC python
import matplotlib.ticker as mticker


df = pd.concat(
    [
        consulta_bc(22109, ["PIB"]),
        consulta_bc(22110, ["Consumo das fam√≠lias"]),
        consulta_bc(22111, ["Consumo do governo"]),
        consulta_bc(22113, ["FBCF"]),
        consulta_bc(22114, ["Exporta√ß√£o"]),
        consulta_bc(22115, ["Importa√ß√£o"]),
    ],
    axis=1,
)

df["Mercado dom√©stico"] = df[
    ["Consumo das fam√≠lias", "Consumo do governo", "FBCF"]
].sum(axis=1)
df["Setor Externo"] = df["Exporta√ß√£o"] - df["Importa√ß√£o"]
df = df["2001-01-01":"2011-12-31"]
fig, ax = plt.subplots(figsize=(19.20, 10.80))

df[["Mercado dom√©stico", "Setor Externo"]].diff(4).apply(
    lambda x: x / (df["PIB"].shift(4))
).dropna().plot(ax=ax, lw=2.5, kind="bar", stacked=True, width=0.75, edgecolor="black")
# ax.set_xticklabels(df.index.strftime('%Y-%m')[::8])
# ax.set_xticklabels(ax.get_xticklabels(), rotation=0)
ticklabels = [""] * len(df)
skip = len(df) // 12
ticklabels[4::skip] = df.index[4::skip].strftime("%Y")
ax.xaxis.set_major_formatter(mticker.FixedFormatter(ticklabels))
fig.autofmt_xdate()

sns.despine()
fig.savefig("./figs/PIB_Decomp_I.png", transparent=True, dpi=300)
plt.cla()
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Decomp. tx de crescimento do produto - Dom√©sticos e externos} 
\includegraphics[width = 0.95\textwidth]{./figs/PIB_Decomp_I.png}
\label{fig:cycles}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export


** Crescimento e o investimento induzido


#+BEGIN_SRC python
fig, ax = plt.subplots(figsize=(19.20, 10.80))
df[["Consumo das fam√≠lias", "Consumo do governo", "FBCF", "Setor Externo"]].diff(
    4
).apply(lambda x: x / (df["PIB"].shift(4))).dropna().plot(
    ax=ax,
    lw=2.5,
    kind="bar",
    stacked=True,
    width=0.75,
    color=(
        "darkred",
        "darkblue",
        "darkorange",
        "darkgreen",
    ),
    edgecolor="black",
)
ticklabels = [""] * len(df)
skip = len(df) // 12
ticklabels[4::skip] = df.index[4::skip].strftime("%Y")
ax.xaxis.set_major_formatter(mticker.FixedFormatter(ticklabels))
fig.autofmt_xdate()

sns.despine()

fig.savefig("./figs/PIB_Decomp_Total_I.png", transparent=True, dpi=300)
plt.cla()
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Taxa de crescimento do produto - decomposi√ß√£o total} 
\includegraphics[width = 0.95\textwidth]{./figs/PIB_Decomp_Total_I.png}
\label{fig:PIB_Decomp_Total}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export




** Investimento p√∫blico em recupera√ß√£o cite:orair_investimento_2016


#+CAPTION: Taxa de crescimento do investimentos p√∫blicos (1994-2015) 
|-----------+--------------+------------+---------------+-----|
|       Ano | Gov. Central | Gov. Geral | Setor P√∫blico | PIB |
|-----------+--------------+------------+---------------+-----|
| 1994-1998 |         -5.1 |       -2.7 |          -0.9 | 2.6 |
| 1998-2002 |         -1.2 |       -2.0 |          -1.9 | 2.3 |
| 2002-2006 |         -0.6 |        0.6 |           0.4 | 3.5 |
| 2006-2010 |         25.4 |       13.5 |          17.0 | 4.6 |
| 2010-2014 |         -0.4 |       -0.1 |          -0.1 | 2.2 |
| 2014-2015 |         -6.2 |       -4.0 |          -5.2 | 0.3 |
|-----------+--------------+------------+---------------+-----|



** Emprego

#+BEGIN_SRC python
df = consulta_bc(28512, ["Emprego Formal"])
df = df["2001-01-01":"2011-12-31"]
fig, ax = plt.subplots(figsize=(19.20, 10.80))

df.plot(
    ax=ax,
    lw=2.5,
    color="black",
    ls="-",
)
sns.despine()

fig.savefig("./figs/EmpregoFormal_I.png", transparent=True, dpi=300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{√çndice do Emprego Formal} 
\includegraphics[width = 0.9\textwidth]{./figs/EmpregoFormal_I.png}
\label{fig:EmpFormal}
\caption*{\textbf{Fonte:} MTb}
\end{figure}
#+end_export


** Taxa de c√¢mbio nominal

#+BEGIN_SRC python
df = consulta_bc(20360, ['C√¢mbio'])

fig, ax = plt.subplots(figsize=(19.20,10.80))
df = df[:"2011-12-31"]
df.plot(ax=ax,
	lw=2.5,
	color='black',
	ls='-',
        label=False,
)
sns.despine()

fig.savefig("./figs/CambioNominal_I.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{ √çndice da taxa de c√¢mbio efetiva nominal\\Jun/1994=100 } 
\includegraphics[width = 0.95\textwidth]{./figs/CambioNominal_I.png}
\label{fig:cambio}
\caption*{\textbf{Fonte:} BCB-DSTAT}
\end{figure}
#+end_export


** Taxa de juros selic

#+BEGIN_SRC python
fig, ax = plt.subplots(1,1, figsize=(19.20,10.80))


df = pd.concat([consulta_bc(1178, ['Efetiva']), consulta_bc(432, ['Meta'])],axis=1)
df["Desvio"] = df["Meta"] - df["Efetiva"]

df["1999-01-01":"2011-12-31"].plot(ax=ax, color=('black', 'red', 'gray'))

ax.set_yticklabels(['{:,.2%}'.format(x/100) for x in ax.get_yticks()])
sns.despine()

fig.savefig("./figs/Selic_I.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Taxa de juros selic a.a. (efetivo x meta)\\Anualizada base 252} 
\includegraphics[width = 0.95\textwidth]{./figs/Selic_I.png}
\label{fig:Selic}
\caption*{\textbf{Fonte:} Copom e BCB-Demab}
\end{figure}
#+end_export


** Finalmente, infla√ß√£o (ops, IPCA)

#+BEGIN_SRC python
df = consulta_bc(13521, ["Meta"])
df = df.resample('MS').ffill()#.bfill()

df["Teto"] = df["Meta"] + 2.0
df["Piso"] = df["Meta"] - 2.0

df = pd.concat([
    df,
    consulta_bc(433,["IPCA"])
], axis=1)

df = df["1998-01-01":"2011-12-31"]
df = df/100
df["IPCA"] = (1+ df["IPCA"]).rolling(window=12).agg(lambda x : x.prod()) -1

fig, ax = plt.subplots(figsize=(19.20,10.80))

df[["IPCA"]].plot(ax=ax,
lw=2,
ls='-',
color = 'red',                  
)

ax.pcolorfast(ax.get_xlim(), ax.get_ylim(),
              (df['IPCA'] > df["Teto"]).values[np.newaxis],
              cmap='Reds', alpha=0.3, label="Acima do Teto",
              zorder=-1,
)

ax.pcolorfast(ax.get_xlim(), ax.get_ylim(),
              (df['IPCA'] < df["Piso"]).values[np.newaxis],
              cmap='Blues', alpha=0.3, label="Abaixo do Piso",
              zorder=-1,
)

ax.legend()

sns.despine()

fig.savefig("./figs/IPCA_I.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{IPCA e Metas para Infla√ß√£o} 
\includegraphics[width = 0.975\textwidth]{./figs/IPCA_I.png}
\label{fig:IPCA}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export
** Composi√ß√£o do IPCA cite:bcb_2019_Atualizacoes

#+CAPTION: IPCA: estruturas de pondera√ß√£o ‚Äì janeiro de 2018
|---------------------------+-----------+-----------+----------|
| Grupo                     | 2008-2009 | 2017-2018 | $\Delta$ |
|---------------------------+-----------+-----------+----------|
| Alimenta√ß√£o e bebidas     |     24.58 |     18.99 |    -5.59 |
| Habita√ß√£o                 |     15.72 |     15.16 |    -0.56 |
| Artigos de resid√™ncia     |      3.98 |      4.02 |     0.04 |
| Vestu√°rio                 |      5.96 |       4.8 |    -1.16 |
| Transporte                |     18.28 |     20.84 |     2.55 |
| Sa√∫de e cuidados pessoais |     12.04 |     13.46 |     1.41 |
| Despesas pessoais         |     10.96 |     10.60 |    -0.36 |
| Educa√ß√£o                  |      4.83 |      5.95 |     1.13 |
| Comunica√ß√£o               |      3.65 |      6.19 |     2.54 |
|---------------------------+-----------+-----------+----------|
** Pre√ßos livres, monitorados, servi√ßos

#+BEGIN_SRC python
df = consulta_bc(13521, ["Meta"])
df = df.resample('MS').ffill()#.bfill()

df["Teto"] = df["Meta"] + 2.0
df["Piso"] = df["Meta"] - 2.0

df = pd.concat([
    df,
    consulta_bc(433,["IPCA"]),
    consulta_bc(11428,["Livres"]),
    consulta_bc(4449,["Monitorados"]),
    consulta_bc(10844,["Servi√ßos"]),
], axis=1)

df = df["1998-01-01":"2011-12-31"]
df = df/100
df["IPCA"] = (1+ df["IPCA"]).rolling(window=12).agg(lambda x : x.prod()) -1
df["Livres"] = (1+ df["Livres"]).rolling(window=12).agg(lambda x : x.prod()) -1
df["Monitorados"] = (1+ df["Monitorados"]).rolling(window=12).agg(lambda x : x.prod()) -1
df["Servi√ßos"] = (1+ df["Servi√ßos"]).rolling(window=12).agg(lambda x : x.prod()) -1
fig, ax = plt.subplots(figsize=(19.20,10.80))

df[["Livres", "Monitorados", "Servi√ßos", "IPCA"]].dropna().plot(ax=ax,
lw=2,
ls='-',
color = ('blue','red','green', 'black'),                  
)

ax.pcolorfast(ax.get_xlim(), ax.get_ylim(),
              (df['IPCA'] > df["Teto"]).values[np.newaxis],
              cmap='Reds', alpha=0.3, label="Acima do Teto",
              zorder=-1,
)

ax.pcolorfast(ax.get_xlim(), ax.get_ylim(),
              (df['IPCA'] < df["Piso"]).values[np.newaxis],
              cmap='Blues', alpha=0.3, label="Abaixo do Piso",
              zorder=-1,
)

ax.legend()

sns.despine()

fig.savefig("./figs/Livres_Administrados_I.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{IPCA e seus componentes: pre√ßos livres, monitorados e servi√ßos} 
\includegraphics[width = 0.975\textwidth]{./figs/Livres_Administrados_I.png}
\label{fig:livres_adm}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export


* Governo(s?) Dilma

** Os tr√™s motores cite:serrano_demanda_2015
#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Os tr√™s motores do crescimento} 
\includegraphics[width = 0.75\textwidth]{./figs/Tenores.png}
\label{fig:tenores}
\caption*{\textbf{Fonte:} Elabora√ß√£o pr√≥pria}
\end{figure}
#+end_export

*Principal mudan√ßa:* do incentivo √† demanda agregada ao incetivo ao investimento privado.

** Primeira fase (2011-2014)

*Estado* na estrat√©gia de crescimento econ√¥mico
- Pol√≠ticas macroecon√¥micas $\Rightarrow \Uparrow$ investimento privado
- Reconhecimento da *ind√∫stria* como determinante do crescimento

*** Mudan√ßa no contexto dom√©stico e internacional
- *Dom√©stico:* Acelera√ß√£o da infla√ß√£o, expans√£o do cr√©dito $\Rightarrow$ medidas macroprudenciais
- *Internacional:* Cen√°rio externo permissivo (miniciclo das /commodities/)


** Dificuldades em aberto cite:mello_2017_industrialismo

- Limites do crescimento com expans√£o da demanda de consumo via cr√©dito e pol√≠ticas sociais
- Retomada da taxa de investimento, mas n√≠vel baixo
  - Dificuldade de retomada do investimento p√∫blico
  - Crise mundial e investimento privado
- Estrutura produtiva
    
** Guinadas de pol√≠tica econ√¥mica

*** Pol√≠tica fiscal
Isen√ß√µes fiscais $\Rightarrow$ incentivar investimento privado

*** Pol√≠tica monet√°ria

Redu√ß√£o na taxa de juros $\Rightarrow \Downarrow$ juros de longo prazo

*** Pol√≠tica cambial

Interven√ß√£o no mercado de derivativos $\Rightarrow$ *Desvaloriza√ß√£o* cambial $\Rightarrow \Uparrow$ Ind√∫stria

*** Rupturas

- Redu√ß√£o da arrecada√ß√£o $\Rightarrow \Uparrow$ d√≠vida/PIB
- C√¢mbio valorizado $\Leftrightarrow$ Juros elevados $\nRightarrow$ Controle inflacion√°rio

** Medidas macroprudenciais

*Medidas macroprudenciais:* Redu√ß√£o do crescimento do cr√©dito.

- Redu√ß√£o da taxa de crescimento da renda dispon√≠vel real
- Aumento dos dep√≥sitos compuls√≥rios
- Aumento do capital m√≠nimo exigido dos bancos para empr√©stimos ao consumidor de prazos mais longos
- Aumento do percentual m√≠nimo de pagamento de cart√µes de cr√©dito

*** Implica√ß√µes
- Aumento do spread do cr√©dito ao consumo final
- Diminui√ß√£o dos prazos
- Elimina *boom* de consumo
- Aumento da inadimpl√™ncia

** Fatores internacionais, pol√≠ticos e institucionais
*** Internacionais $\Rightarrow$ deteriora√ß√£o do BP e da ind√∫stria

- Crise do Euro
- Redu√ß√£o do ritmo de crescimento da China
- Fim do miniciclo de /commodities/ e c√¢mbio desvalorizado
*** Pol√≠ticos  e institucionais $\Rightarrow$ Incerteza eleitoral
- Manifesta√ß√µes de 2013
- Avan√ßo da Opera√ß√£o Lava Jato
- Cutucando on√ßas com varas curtas cite:singer_cutucando_2015

** Desacelera√ß√£o rudimentar I

#+CAPTION: Compara√ß√£o das taxas de crescimento
|----------------------------+-----------+-----------|
|                            | 2004-2010 | 2011-2014 |
|----------------------------+-----------+-----------|
| PIB                        |      4.4% |      2.1% |
| Produ√ß√£o industrial        |      3.6% |     -0.9% |
| Taxa de desemprego         |      9.0% |      5.4% |
| Cr√©dito para habita√ß√£o     |     21,5% |      4,6% |
| Hipotecas                  |     20,1% |     29,3% |
| Sal√°rio real (emp. formal) |      2,9% |      2,9% |
| Renda disp. (Fam√≠lias)     |      5,3% |      1,2% |
|----------------------------+-----------+-----------|


** Desacelera√ß√£o rudimentar II

#+CAPTION: Pol√≠tica fiscal
|-----------------------------------+-----------+-----------|
|                                   | 2004-2010 | 2011-2014 |
|-----------------------------------+-----------+-----------|
| Super√°vit prim√°rio/PIB            | 3,2%      | 1,7%      |
| Receitas do setor p√∫blico         | 7,2%      | 1,2%      |
| Transf. p√∫blicas para as fam√≠lias | 5,6%      | 4,9%      |
| Invest. Emp. Estatais (Federal)   | 16,3%     | -2,7%     |
| Investimento Adm, P√∫blica         | 14,0%     | -1,0%     |
|-----------------------------------+-----------+-----------|

*Principal mudan√ßa:* do industrialismo √† austeridade

** Segunda fase (2015-?)
Choques recessivos $\Rightarrow$ enfrentar os "desequil√≠brios" da economia brasileira:

- *Fiscal:* Cortes dos gastos do governo
- *Cambial:* Desvaloriza√ß√£o acentuada (50%)
- *Pre√ßos administrados:* realinhamento (choque) das tarifas de eletricidade e combust√≠vel
- *Monet√°rio:* Eleva√ß√£o da taxa de juros (14,25%)

** [[https://www.causaoperaria.org.br/brasil-o-golpe-a-opera-do-fim-do-mundo-artista-retrata-o-golpe-de-estado-no-pais/][Pr√™ambulo para a √≥pera do fim do mundo]]

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Brasil, O Golpe: A √ìpera do fim do mundo} 
\includegraphics[width = 0.9\textwidth]{./figs/opera.png}
\caption*{\textbf{Fonte:} Jornal GGN}
\end{figure}
#+end_export

* Governos (?) Temer e In√≠cio Bolsonaro
** Continuidades: Reformas

Desde o Governo Temer (2016-2019) at√© o Governo Bolsonaro (2019-) houve uma mudan√ßa profunda na condu√ß√£o da pol√≠tica econ√¥mica:
- Pol√≠ticas ortodoxas
- Reformas liberalizantes
  + *Trabalhista (2016):* Flexibiliza√ß√£o no mercado de trabalho
  + *Previd√™ncia (2019):* Justificativa de reduzir o d√©ficit da previd√™ncia
  + *Tribut√°ria (?):* A caminho
  + *Privatiza√ß√µes:* J√° iniciadas pelas subsidi√°rias e avan√ßando
  + *Abertura comercial:* $\Downarrow$ Tarifas alfandeg√°ria $\Rightarrow \Uparrow$ competitividade via mercado

** Continuidades: Pol√≠ticas macroecon√¥micas

*** Pol√≠tica fiscal
- Implementa√ß√£o do teto de gastos $\Rightarrow$ contracionista $\Leftrightarrow$ contra√ß√£o fiscal expansionista
- Liberaliza√ß√£o de recursos (FGTS e PIS/PASEP) $\Rightarrow$ estimular demanda agregada
*** Pol√≠tica monet√°ria
- Pol√≠tica monet√°ria conservadora $\Rightarrow$ ancorar expectativas inflacion√°rias
*** Pol√≠tica cambial
Mais flex√≠vel $\Rightarrow$ conversibilidade do real

* Corona-crise

** Crise sanit√°ria $\Rightarrow$ crise econ√¥mica? [[https://www.economia.unicamp.br/covid19/o-impacto-economico-da-pandemia-do-covid-19-e-a-contracao-do-pib-no-primeiro-trimestre-de-2020-nao-e-culpa-da-politica-de-saude-publica][Nota Cecon N¬∫14]]

- A contra√ß√£o do PIB tem forte rela√ß√£o com a pandemia do Covid-19, mas n√£o com as pol√≠ticas de sa√∫de p√∫blica
- Tend√™ncia de desacelera√ß√£o do IBC-Br desde o √∫ltimo trimestre de 2019.
  + Cont√°gio econ√¥mico: Desacelera√ß√£o $\Rightarrow$ contra√ß√£o
- Desacelera√ß√£o econ√¥mica √© relativamente mais r√°pida que a difus√£o da pandemia e anterior √† implementa√ß√£o das primeiras pol√≠ticas de isolamento social.

*** Resumo
√â a *pandemia* que deprime a economia, e n√£o as pol√≠ticas de sa√∫de p√∫blica capazes de control√°-la.

Crise econ√¥mica $\Leftrightarrow$ Pandemia

Crise econ√¥mcia $\nLeftrightarrow$ Isolamento social $\Rightarrow \Downarrow$ Pandemia

** Pol√≠ticas econ√¥micas

*** Medidas de prote√ß√£o da renda

- Aux√≠lio emergencial (R$600,00 $\approx$ US$ 120,00)
- Libera√ß√£o de liquidez no sistema financeiro internacional
- Atenua√ß√£o de requerimento de capital
- Pol√≠ticas de cr√©dito para o setor empresarial
* Dados 2011-2020



** PIB puxado pelo mercado dom√©stico

#+BEGIN_SRC python
import matplotlib.ticker as mticker


df = pd.concat([
    consulta_bc(22109,["PIB"]),
    consulta_bc(22110,["Consumo das fam√≠lias"]),
    consulta_bc(22111,["Consumo do governo"]),
    consulta_bc(22113,["FBCF"]),
    consulta_bc(22114,["Exporta√ß√£o"]),
    consulta_bc(22115,["Importa√ß√£o"])
], axis=1)

df["Mercado dom√©stico"] = df[["Consumo das fam√≠lias", "Consumo do governo", "FBCF"]].sum(axis=1)
df["Setor Externo"] = df["Exporta√ß√£o"] - df["Importa√ß√£o"]
df = df["2010-12-31":]
fig, ax = plt.subplots(figsize=(19.20,10.80))

df[["Mercado dom√©stico", "Setor Externo"]].diff(4).apply(lambda x: x/(df["PIB"].shift(4))).dropna().plot(ax=ax,
                                                lw=1.5,
                                                kind='bar',
                                                stacked=True,
                                                                                                width = 0.75,
                                                edgecolor='black'
                                                
)
#ax.set_xticklabels(df.index.strftime('%Y-%m')[::8])
#ax.set_xticklabels(ax.get_xticklabels(), rotation=0)

ticklabels = ['']*len(df)
skip = len(df)//12
ticklabels[4::skip] = df.index[4::skip].strftime('%Y')
ax.xaxis.set_major_formatter(mticker.FixedFormatter(ticklabels))
fig.autofmt_xdate()

ax.text(
	0.95, -0.12,
	f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
        verticalalignment='bottom', horizontalalignment='right',
        transform=ax.transAxes,
        color='black', fontsize=15)


sns.despine()
fig.savefig("./figs/PIB_Decomp.png", transparent = True, dpi = 300)
plt.cla()
#+END_SRC

#+RESULTS:
:results:
/tmp/babel-3DJZ6P/python-JLejoC:16: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, ax = plt.subplots(figsize=(19.20,10.80))
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Decomposi√ß√£o da taxa de crescimento do produto - Dom√©sticos e externos} 
\includegraphics[width = 0.9\textwidth]{./figs/PIB_Decomp.png}
\label{fig:cycles}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export


** Crescimento e o investimento induzido


#+BEGIN_SRC python
fig, ax = plt.subplots(figsize=(19.20,10.80))
df = df["2010-12-31":]
df[["Consumo das fam√≠lias", "Consumo do governo", "FBCF",
    "Setor Externo"
]].diff(4).apply(lambda x: x/(df["PIB"].shift(4))).dropna().plot(ax=ax,
                                                                 lw=1.5,
                                                                 kind='bar',
                                                                 stacked=True,
                                                                 width = 0.75,
                                                                 color = ("darkred", "darkblue", "darkorange", "darkgreen",),
                                                                 edgecolor='black'
                                                
)
ticklabels = ['']*len(df)
skip = len(df)//12
ticklabels[4::skip] = df.index[4::skip].strftime('%Y')
ax.xaxis.set_major_formatter(mticker.FixedFormatter(ticklabels))
fig.autofmt_xdate()

ax.text(
	0.95, -0.12,
	f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
        verticalalignment='bottom', horizontalalignment='right',
        transform=ax.transAxes,
        color='black', fontsize=15)


sns.despine()

fig.savefig("./figs/PIB_Decomp_Total.png", transparent = True, dpi = 300)
plt.cla()
#+END_SRC

#+RESULTS:
:results:
/tmp/babel-3DJZ6P/python-xfaobd:1: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, ax = plt.subplots(figsize=(19.20,10.80))
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Taxa de crescimento do produto - decomposi√ß√£o total} 
\includegraphics[width = 0.9\textwidth]{./figs/PIB_Decomp_Total.png}
\label{fig:PIB_Decomp_Total}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export



** Emprego

#+BEGIN_SRC python
df = consulta_bc(28512, ["Emprego Formal"])

fig, ax = plt.subplots(figsize=(19.20,10.80))

df = df["2010-12-31":]
df.plot(ax=ax,
lw=2.5,
color='black',
ls='-',
)

ax.text(
0.95, -0.15,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)


sns.despine()

fig.savefig("./figs/EmpregoFormal.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
/tmp/babel-3DJZ6P/python-5LAGhB:3: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, ax = plt.subplots(figsize=(19.20,10.80))
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{√çndice do Emprego Formal} 
\includegraphics[width = 0.9\textwidth]{./figs/EmpregoFormal.png}
\label{fig:EmpFormal}
\caption*{\textbf{Fonte:} MTb}
\end{figure}
#+end_export





** Taxa de c√¢mbio nominal

#+BEGIN_SRC python
df = consulta_bc(20360, ['C√¢mbio'])

df = df["2010-12-31":]
fig, ax = plt.subplots(figsize=(19.20,10.80))

df.plot(ax=ax,
	lw=2.5,
	color='black',
	ls='-',
        label=False,
)

ax.text(
	0.95, -0.2,
	f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
        verticalalignment='bottom', horizontalalignment='right',
        transform=ax.transAxes,
        color='black', fontsize=10)


sns.despine()

fig.savefig("./figs/CambioNominal.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
/tmp/babel-3DJZ6P/python-tXn4vY:4: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, ax = plt.subplots(figsize=(19.20,10.80))
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{ √çndice da taxa de c√¢mbio efetiva nominal\\Jun/1994=100 } 
\includegraphics[width = 0.9\textwidth]{./figs/CambioNominal.png}
\label{fig:cambio}
\caption*{\textbf{Fonte:} BCB-DSTAT}
\end{figure}
#+end_export


** Taxa de juros selic


#+BEGIN_SRC python
fig, ax = plt.subplots(1,1, figsize=(19.20,10.80))


df = pd.concat([consulta_bc(1178, ['Efetiva']), consulta_bc(432, ['Meta'])],axis=1)
df["Desvio"] = df["Meta"] - df["Efetiva"]

df = df["2010-12-31":]
df.plot(ax=ax, color=('black', 'red', 'gray'))

ax.set_yticklabels(['{:,.2%}'.format(x/100) for x in ax.get_yticks()])



ax.text(
0.95, -0.2,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)


sns.despine()

fig.savefig("./figs/Selic.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
/tmp/babel-3DJZ6P/python-qQdoAm:1: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, ax = plt.subplots(1,1, figsize=(19.20,10.80))
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Taxa de juros selic a.a. (efetivo x meta)\\Anualizada base 252} 
\includegraphics[width = 0.9\textwidth]{./figs/Selic.png}
\label{fig:Selic}
\caption*{\textbf{Fonte:} Copom e BCB-Demab}
\end{figure}
#+end_export


** Finalmente, infla√ß√£o (ops, IPCA)

#+BEGIN_SRC python
df = consulta_bc(13521, ["Meta"])
df = df.resample('MS').ffill()#.bfill()

df["Teto"] = df["Meta"] + 2.0
df["Piso"] = df["Meta"] - 2.0

df = pd.concat([
    df,
    consulta_bc(433,["IPCA"])
], axis=1)

df = df["2009-12-31":]
df = df/100
df["IPCA"] = (1+ df["IPCA"]).rolling(window=12).agg(lambda x : x.prod()) -1
df = df.dropna()
fig, ax = plt.subplots(figsize=(19.20,10.80))

df[["IPCA"]].plot(ax=ax,
lw=2,
ls='-',
color = 'red',                  
)

ax.text(
0.95, -0.15,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)

ax.pcolorfast(ax.get_xlim(), ax.get_ylim(),
              (df['IPCA'] > df["Teto"]).values[np.newaxis],
              cmap="Reds", alpha=0.3, label="Acima do Teto",
              zorder=-1,
)

ax.pcolorfast(ax.get_xlim(), ax.get_ylim(),
              (df['IPCA'] < df["Piso"]).values[np.newaxis],
              cmap='Blues', alpha=0.3, label="Abaixo do Piso",
              zorder=-1,
)

ax.legend()

sns.despine()

fig.savefig("./figs/IPCA.png", transparent = True, dpi = 300)
#+END_SRC

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{IPCA e Metas para Infla√ß√£o} 
\includegraphics[width = 0.9\textwidth]{./figs/IPCA.png}
\label{fig:IPCA}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export
** Pre√ßos livres, monitorados, servi√ßos

#+BEGIN_SRC python
df = consulta_bc(13521, ["Meta"])
df = df.resample("MS").ffill()  # .bfill()

df["Teto"] = df["Meta"] + 2.0
df["Piso"] = df["Meta"] - 2.0

df = pd.concat(
    [
        df,
        consulta_bc(433, ["IPCA"]),
        consulta_bc(11428, ["Livres"]),
        consulta_bc(4449, ["Monitorados"]),
        consulta_bc(10844, ["Servi√ßos"]),
    ],
    axis=1,
)

df = df["2009-12-31":]
df = df / 100
df["IPCA"] = (1 + df["IPCA"]).rolling(window=12).agg(lambda x: x.prod()) - 1
df["Livres"] = (1 + df["Livres"]).rolling(window=12).agg(lambda x: x.prod()) - 1
df["Monitorados"] = (1 + df["Monitorados"]).rolling(window=12).agg(
    lambda x: x.prod()
) - 1
df["Servi√ßos"] = (1 + df["Servi√ßos"]).rolling(window=12).agg(lambda x: x.prod()) - 1
fig, ax = plt.subplots(figsize=(19.20, 10.80))

df[["Livres", "Monitorados", "Servi√ßos", "IPCA"]].dropna().plot(
    ax=ax,
    lw=2,
    ls="-",
    color=("blue", "red", "green", "black"),
)

ax.text(
    0.95,
    -0.15,
    f"\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}",
    verticalalignment="bottom",
    horizontalalignment="right",
    transform=ax.transAxes,
    color="black",
    fontsize=10,
)

ax.pcolorfast(
    ax.get_xlim(),
    ax.get_ylim(),
    (df["IPCA"] > df["Teto"]).values[np.newaxis],
    cmap="Reds",
    alpha=0.3,
    label="Acima do Teto",
    zorder=-1,
)

ax.pcolorfast(
    ax.get_xlim(),
    ax.get_ylim(),
    (df["IPCA"] < df["Piso"]).values[np.newaxis],
    cmap="Blues",
    alpha=0.3,
    label="Abaixo do Piso",
    zorder=-1,
)

ax.legend()

sns.despine()

fig.savefig("./figs/Livres_Administrados.png", transparent=True, dpi=300)
plt.cla()
#+END_SRC

#+RESULTS:
:results:
/tmp/babel-3DJZ6P/python-h4z0kj:21: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, ax = plt.subplots(figsize=(19.20,10.80))
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{IPCA e seus componentes: pre√ßos livres, monitorados e servi√ßos} 
\includegraphics[width = 0.95\textwidth]{./figs/Livres_Administrados.png}
\label{fig:livres_adm}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export

** Consumo de energia n√£o-residencial (dados di√°rios)
#+begin_export latex
\begin{figure}[htb]
\centering
\includegraphics[width = 0.95\textwidth]{./figs/Energia.png}
\label{fig:cycles}
\caption*{\textbf{Fonte:} \textcite{bastos_2020_impacto}}
\end{figure}
#+end_export

** Indicadores de antecedentes: IBC-Br 

#+begin_export latex
\begin{figure}[htb]
\centering
\includegraphics[width = 0.95\textwidth]{./figs/IBCBr_corona.png}
\label{fig:cycles}
\caption*{\textbf{Fonte:} \textcite{bastos_2020_impacto}}
\end{figure}
#+end_export
* Refer√™ncias

** Refer√™ncias

#+BEGIN_EXPORT latex

\printbibliography

#+END_EXPORT


* Res√≠duos :ignore:noexport:
** √çndice EMBI Brasil (Fim de per√≠odo)
   CLOSED: [2020-11-02 seg 20:15]

#+BEGIN_SRC python
df = pd.read_html(
    'http://www.ipeadata.gov.br/ExibeSerie.aspx?serid=40940&module=M',
    thousands='.',
)[2]

df = pd.DataFrame(df).iloc[1:]
df.iloc[:,0] =  pd.to_datetime(df.iloc[:,0], format='%d/%m/%Y')
df.columns = ["Data", "EMBI+"]
df.set_index("Data", inplace=True)
df.index.name=''
df = df.apply(pd.to_numeric, errors='coerce')#.resample('B').last()

fig, ax = plt.subplots(figsize=(19.2,10.8))

df.plot(ax=ax,
	lw=2.5,
	color='red',
	ls='-',
)

ax.text(
    0.95, -0.12,
    f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
    verticalalignment='bottom', horizontalalignment='right',
    transform=ax.transAxes,
    color='black', fontsize=15)


sns.despine()
plt.show()
fig.savefig("./figs/EMBI.png", transparent = True, dpi = 300)
plt.cla()
#+END_SRC

#+RESULTS:
:results:
/tmp/babel-3DJZ6P/python-oI8kkB:13: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).
  fig, ax = plt.subplots(figsize=(19.2,10.8))
:end:
   

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Spread Soberano = EMBI+} 
\includegraphics[width = 0.9\textwidth]{./figs/EMBI.png}
\label{fig:embi}
\caption*{\textbf{Fonte:} IPEADATA}
\end{figure}
#+end_export

** O ciclo das commodities
   CLOSED: [2020-10-16 sex 16:12]

#+BEGIN_SRC python


df = pd.concat([
    consulta_bc(27574, nome = ["Brasil"]),
    consulta_bc(27576, nome = ["Metal"]),
    consulta_bc(27575, nome = ["Agropecu√°ria"]),
], axis=1)


for col in df.columns:
    df[col] = df[col].apply(lambda x: 100*x/df[col]["2002-01-01"])


fig, ax = plt.subplots(figsize=(19.20,10.80))

df.plot(ax=ax,
	lw=2.5,
	ls='-',
)

ax.text(
	0.95, -0.1,
        f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
        verticalalignment='bottom', horizontalalignment='right',
        transform=ax.transAxes,
        color='black', fontsize=10)


sns.despine()

fig.savefig("./figs/Commodities.png", transparent = False, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{√çndice de Commodities - Brasil\\M√©dia m√≥vel 12 meses} 
\includegraphics[width = .9\textwidth]{./figs/Commodities.png}
\caption*{\textbf{Fonte:} BCB-Depec}
\end{figure}
#+end_export


** Fluxos de capital

#+BEGIN_SRC python
df = pd.concat([
    consulta_bc(22866, nome = ["Investimento Direto Estrangeiro (ingresso)"]),
    consulta_bc(22907, nome = ["Investimento em carteira (ingresso)"]),
    consulta_bc(22970, nome = ["Outros investimentos (ingresso)"]),
    consulta_bc(22864, nome = ["Conta financeira (l√≠quida)"]),
]).apply(pd.to_numeric, errors='coerce').resample("MS").last()

fig, ax = plt.subplots(figsize=(19.20,10.80))

df.drop(['Conta financeira (l√≠quida)'], axis='columns').rolling(12).mean().plot(
    ax=ax,
    lw=2.5,
    color=('orange', 'lightblue', 'darkblue'),
    ls='-',
    legend=False
)

df[['Conta financeira (l√≠quida)']].rolling(12).mean().plot(
    ax=ax,
    lw=2.5,
    color=('red'),
    kind='area',
    legend=False,
    stacked=False
)

ax.legend(frameon=True, edgecolor='black')

ax.set_ylabel('US$ (Milh√µes)')

ax.text(
    0.95, -0.08,
    f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
    verticalalignment='bottom', horizontalalignment='right',
    transform=ax.transAxes,
    color='black', fontsize=15)


sns.despine()
fig.savefig("./figs/FluxosInternacionais.png", transparent = True, dpi = 300)
plt.cla()
#+END_SRC

#+RESULTS:
:results:
:end:


#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Balan√ßo de Bagamentos - Conta financeira e seus componentes} 
\includegraphics[width = 0.9\textwidth]{./figs/FluxosInternacionais.png}
\label{fig:financeira}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export


** Evolu√ß√£o das reservas internacionais l√≠quidas
   CLOSED: [2020-10-16 sex 16:12]


#+BEGIN_SRC python
df = consulta_bc(13621, nome = ["Total"])
#df = pd.concat([df, consulta_bc(13982 , nome = ["Conceito Liquidez"])], axis=1, sort=False)
fig, ax = plt.subplots(figsize=(19.20,10.80))

df.plot(ax=ax,
lw=2.5,
ls='-',
        color='darkred'
)

ax.text(
0.95, -0.2,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)
ax.set_ylabel('US$ (milh√µes)')

sns.despine()

fig.savefig("./figs/Reservas_Internacionais.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Reservas Internacionais} 
\includegraphics[width = 0.9\textwidth]{./figs/Reservas_Internacionais.png}
\label{fig:reservas}
\caption*{\textbf{Fonte:} BCB-DSTAT}
\end{figure}
#+end_export


** DONE Evolu√ß√£o dos rendimentos (I)
   CLOSED: [2020-10-16 sex 16:41]
#+BEGIN_SRC python
df = consulta_bc(
    10790,
    ["RMRE - Todos os trabalhos"]
)

df['S√©rie Desazonalizada'] = sm.tsa.seasonal_decompose(df["RMRE - Todos os trabalhos"]).trend

fig, ax = plt.subplots(figsize=(19.20,10.80))

df.plot(ax=ax,
lw=2.5,
color=('darkred', 'black'),
ls='-'
)

ax.text(
0.95, -0.15,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)
ax.set_ylabel('R$')


sns.despine()

fig.savefig("./figs/RendimentoEfetivo.png", transparent = True, dpi = 300)
plt.cla()
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Rendimento m√©dio real efetivo das pessoas ocupadas\\ N√£o desazonalizada} 
\includegraphics[width = 0.9\textwidth]{./figs/RendimentoEfetivo.png}
\label{fig:RendimentoE}
\caption*{\textbf{Fonte:} IBGE}
\end{figure}
#+end_export

*Nota:* Esta s√©ria foi descontinuada


** DONE Evolu√ß√£o dos rendimentos (II)
   CLOSED: [2020-10-16 sex 16:41]
   
#+BEGIN_SRC python
df = consulta_bc(28545, ["MRRH - Todos os trabalhos"])

fig, ax = plt.subplots(figsize=(19.20,10.80))

df.plot(ax=ax,
lw=2.5,
color='darkred',
ls='-'
)

ax.text(
0.95, -0.15,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)
ax.set_ylabel('R$ (milh√µes)')


sns.despine()

fig.savefig("./figs/RendimentoHabitual.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Massa de rendimento real habitual de todos os trabalhos} 
\includegraphics[width = 0.9\textwidth]{./figs/RendimentoHabitual.png}
\label{fig:RendimentoH}
\caption*{\textbf{Fonte:} IBGE}
\end{figure}
#+end_export

*Memo:* S√©rie anterior descontinuada

** DONE Consumo das fam√≠lias
   CLOSED: [2020-10-16 sex 17:55]
#+BEGIN_SRC python
fig, ax = plt.subplots(figsize=(19.20,10.80))

consulta_bc(22110, ["N√∫mero √çndice"]).plot(ax=ax,
lw=2.5,
color='black',
ls='-',
)

ax.text(
0.95, -0.1,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)


sns.despine()

fig.savefig("./figs/ConsumoFamilias.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Consumo das fam√≠lias\\Jan/1995=100} 
\includegraphics[width = 0.9\textwidth]{./figs/ConsumoFamilias.png}
\label{fig:Consumo}
\caption*{\textbf{Fonte:} IBGE}
\end{figure}
#+end_export

** DONE Endividamento das fam√≠lias
   CLOSED: [2020-10-16 sex 17:55]

#+BEGIN_SRC python
df = pd.concat(
    [
        consulta_bc(19882, ["Total"]),
        consulta_bc(20400, ["Exceto cr√©dito habitacional"])
    ],
    axis = 1
)

fig, ax = plt.subplots(figsize=(19.20,10.80))

df.plot(ax=ax,
	lw=2.5,
	ls='-'
)

ax.text(
	0.95, -0.15,
	f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
        verticalalignment='bottom', horizontalalignment='right',
        transform=ax.transAxes,
        color='black', fontsize=10)
ax.set_yticklabels(['{:,.2%}'.format(x/100) for x in ax.get_yticks()])

sns.despine()

fig.savefig("./figs/EndividamentoFam.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Endividamento das fam√≠lias\\em \% do PIB} 
\includegraphics[width = 0.65\textwidth]{./figs/EndividamentoFam.png}
\label{fig:Endiv}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export



** A evolu√ß√£o favor√°vel da d√≠vida p√∫blica

*Dado:* Evolu√ß√£o da d√≠vida bruta e l√≠quida (%PIB)

#+BEGIN_SRC python
fig, ax = plt.subplots(figsize=(19.20,10.80))

df = pd.concat([
    consulta_bc(4536, ["L√≠quida"]),
    consulta_bc(13762, ["Bruta"]),
    ]
).apply(pd.to_numeric, errors='coerce').resample("MS").last()



(df/100).plot(ax=ax,
lw=2.5,
color=('black','red'),
ls='-',
)

ax.axhline(y=0, ls='--', color='gray', lw=1.0)

ax.text(
0.95, -0.15,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)


sns.despine()

fig.savefig("./figs/Divida_BrutaLiquida.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

** Resultado prim√°rio do Governo Central

#+BEGIN_SRC python
fig, ax = plt.subplots(figsize=(19.20,10.80))

df = pd.concat([
    consulta_bc(5497, ["Resultado Prim√°rio"]),
    consulta_bc(5431, ["Resultado Nominal"]),
    consulta_bc(5464, ["Juros nominais"]),
    ]
).apply(pd.to_numeric, errors='coerce').resample("MS").last().dropna()

df[["Resultado Prim√°rio", "Resultado Nominal"]] = df[["Resultado Prim√°rio", "Resultado Nominal"]]*(-1)

(df/100)["1996-01-01":].plot(ax=ax,
lw=2.5,
color=('black','red', 'blue'),
ls='-',
)

ax.axhline(y=0, ls='--', color='gray', lw=1.0)

ax.text(
0.95, -0.15,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)


sns.despine()

fig.savefig("./figs/Resultado_Primario.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:

#+BEGIN_SRC latex :exports none
\begin{figure}[htb]
\centering
\caption{Setor p√∫blico consolidado em \% do PIB} 
\includegraphics[width = 0.9\textwidth]{./figs/Resultado_Primario.png}
\label{fig:primario}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+END_SRC

#+RESULTS:
#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Setor p√∫blico consolidado em \% do PIB} 
\includegraphics[width = 0.9\textwidth]{./figs/Resultado_Primario.png}
\label{fig:primario}
\caption*{\textbf{Fonte:} BCB}
\end{figure}
#+end_export

#+CAPTION: Metas e valores realizados do superavit prim√°rio do setor p√∫blico (2003-2016) - cite:orair_investimento_2016
|------+-------+---------+-------------+---------+-----------|
|  Ano |  Meta | Dedu√ß√£o | P√≥s-dedu√ß√£o | Efetivo | Excedente |
|------+-------+---------+-------------+---------+-----------|
| 2003 |  4.25 |       - |        4.25 |    4.37 |      0.12 |
| 2004 |  4.25 |       - |        4.25 |    4.58 |      0.33 |
| 2005 |  4.25 |    0.14 |        4.11 |    4.83 |      0.72 |
| 2006 |  4.25 |    0.15 |        4.10 |    4.37 |      0.27 |
| 2007 |  4.25 |     0.2 |        4.05 |    4.50 |      0.45 |
| 2008 |  3.80 |    0.48 |        3.32 |    4.56 |      1.24 |
| 2009 |  2.50 |    0.90 |        1.60 |    2.05 |      0.45 |
| 2010 |  3.30 |    0.67 |        2.63 |    2.07 |     -0.57 |
| 2011 |  3.30 |    0.84 |        2.46 |    3.38 |      0.93 |
| 2012 |  3.10 |    0.90 |        2.20 |    2.05 |     -0.15 |
| 2013 |  3.10 |    0.88 |        2.22 |    1.82 |     -0.40 |
| 2014 |  3.10 |    1.07 |        2.03 |    -0.6 |     -2.63 |
| 2015 | -0.85 |       - |       -0.85 |   -1.92 |     -1.07 |
|------+-------+---------+-------------+---------+-----------|


** Saldo de Cr√©dito I

#+BEGIN_SRC python

df = consulta_bc(20622, ["Total"])

df = pd.concat([
    df,
    consulta_bc(20625, ["Cr√©dito livre"]),
    consulta_bc(20628, ["Cr√©dito direcionado"]),
]
).apply(pd.to_numeric, errors='coerce').resample("MS").last()


fig, ax = plt.subplots(figsize=(19.20,10.80))

df = df["2001-01-01":"2011-12-31"]
df.plot(ax=ax,
lw=2.5,
ls='-',
)

ax.text(
0.95, -0.17,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)

ax.set_yticklabels(['{:,.2%}'.format(x/100) for x in ax.get_yticks()])

sns.despine()

fig.savefig("./figs/Credito_I.png", transparent = True, dpi = 300)

#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Saldo de Cr√©dito\\em \% do PIB} 
\includegraphics[width = 0.9\textwidth]{./figs/Credito_I.png}
\label{fig:Credito}
\caption*{\textbf{Fonte:} BCB-DSTAT}
\end{figure}
#+end_export

** Saldo de Cr√©dito
   CLOSED: [2020-10-16 sex 18:14]

#+BEGIN_SRC python

df = consulta_bc(20622, ["Total"])

df = pd.concat([
    df,
    consulta_bc(20625, ["Cr√©dito livre"]),
    consulta_bc(20628, ["Cr√©dito direcionado"]),
]
).apply(pd.to_numeric, errors='coerce').resample("MS").last()


fig, ax = plt.subplots(figsize=(19.20,10.80))

df["1996-01-01":].plot(ax=ax,
lw=2.5,
ls='-',
)

ax.text(
0.95, -0.17,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)

ax.set_yticklabels(['{:,.2%}'.format(x/100) for x in ax.get_yticks()])

sns.despine()

fig.savefig("./figs/Credito.png", transparent = True, dpi = 300)

#+END_SRC

#+RESULTS:
:results:
:end:

#+begin_export latex
\begin{figure}[htb]
\centering
\caption{Saldo de Cr√©dito\\em \% do PIB} 
\includegraphics[width = 0.9\textwidth]{./figs/Credito.png}
\label{fig:Credito}
\caption*{\textbf{Fonte:} BCB-DSTAT}
\end{figure}
#+end_export

** D√≠vida l√≠quida do setor p√∫blico
   CLOSED: [2020-10-16 sex 16:20]

#+BEGIN_SRC python
df = pd.concat(
    [
        consulta_bc(4503, ["Total"]),
        consulta_bc(4514, ["Interna"]),
        consulta_bc(4525, ["Externa"]),
    ],
    axis=1
)

fig, ax = plt.subplots(figsize=(19.20,10.80))

df.plot(ax=ax,
lw=2.5,
ls='-'
)

ax.set_yticklabels(['{:,.2%}'.format(x/100) for x in ax.get_yticks()])
ax.axhline(y=0, ls='--', lw=1.0, color='black')

ax.text(
0.95, -0.1,
f'\nAtualizado em {datetime.datetime.now():%Y-%m-%d %H:%M}',
verticalalignment='bottom', horizontalalignment='right',
transform=ax.transAxes,
color='black', fontsize=10)


sns.despine()

fig.savefig("./figs/DividaLiquida.png", transparent = True, dpi = 300)
#+END_SRC

#+RESULTS:
:results:
:end:


#+begin_export latex
\begin{figure}[htb]
\centering
\caption{D√≠vida l√≠quida do Governo Federal e Banco Central\\em \% do PIB} 
\includegraphics[width = 0.9\textwidth]{./figs/DividaLiquida.png}
\label{fig:divliq}
\caption*{\textbf{Fonte:} BCB-DSTAT}
\end{figure}
#+end_export

